{"remainingRequest":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/fasr/Workspace/fasr/rodriguesfas.github.io/docs/ebook/champs-da-galaxia.md","dependencies":[{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/docs/ebook/champs-da-galaxia.md","mtime":1667479926446},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-ebook-champs-da-galaxia-md-488.json","mtime":1667483611142},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}