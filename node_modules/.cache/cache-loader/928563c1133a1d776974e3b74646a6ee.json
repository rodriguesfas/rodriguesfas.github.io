{"remainingRequest":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js??ref--8-1!/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/theme-search-algolia/src/theme/hooks/useAlgoliaContextualFacetFilters.js","dependencies":[{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/theme-search-algolia/src/theme/hooks/useAlgoliaContextualFacetFilters.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/babel.config.js","mtime":1667479926426},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgdXNlQ29udGV4dHVhbFNlYXJjaEZpbHRlcnMgZnJvbSdAdGhlbWUvaG9va3MvdXNlQ29udGV4dHVhbFNlYXJjaEZpbHRlcnMnOy8vIFRyYW5zbGF0ZSBzZWFyY2gtZW5naW5lIGFnbm9zdGljIHNlYXJjaCBmaWx0ZXJzIHRvIEFsZ29saWEgc2VhcmNoIGZpbHRlcnMKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlQWxnb2xpYUNvbnRleHR1YWxGYWNldEZpbHRlcnMoKXtjb25zdHtsb2NhbGUsdGFnc309dXNlQ29udGV4dHVhbFNlYXJjaEZpbHRlcnMoKTsvLyBzZWVtcyBzYWZlIHRvIGNvbnZlcnQgbG9jYWxlLT5sYW5ndWFnZSwgc2VlIEFsZ29saWFTZWFyY2hNZXRhZGF0YXMgY29tbWVudApjb25zdCBsYW5ndWFnZUZpbHRlcj1gbGFuZ3VhZ2U6JHtsb2NhbGV9YDtjb25zdCB0YWdzRmlsdGVyPXRhZ3MubWFwKHRhZz0+YGRvY3VzYXVydXNfdGFnOiR7dGFnfWApO3JldHVybltsYW5ndWFnZUZpbHRlcix0YWdzRmlsdGVyXTt9"},{"version":3,"sources":["/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/theme-search-algolia/src/theme/hooks/useAlgoliaContextualFacetFilters.js"],"names":["useContextualSearchFilters","useAlgoliaContextualFacetFilters","locale","tags","languageFilter","tagsFilter","map","tag"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,0BAAP,KAAuC,yCAAvC,CAEA;AACA,cAAe,SAASC,CAAAA,gCAAT,EAA4C,CACzD,KAAM,CAACC,MAAD,CAASC,IAAT,EAAiBH,0BAA0B,EAAjD,CAEA;AACA,KAAMI,CAAAA,cAAc,CAAI,YAAWF,MAAO,EAA1C,CAEA,KAAMG,CAAAA,UAAU,CAAGF,IAAI,CAACG,GAAL,CAAUC,GAAD,EAAU,kBAAiBA,GAAI,EAAxC,CAAnB,CAEA,MAAO,CAACH,cAAD,CAAiBC,UAAjB,CAAP,CACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport useContextualSearchFilters from '@theme/hooks/useContextualSearchFilters';\n\n// Translate search-engine agnostic search filters to Algolia search filters\nexport default function useAlgoliaContextualFacetFilters() {\n  const {locale, tags} = useContextualSearchFilters();\n\n  // seems safe to convert locale->language, see AlgoliaSearchMetadatas comment\n  const languageFilter = `language:${locale}`;\n\n  const tagsFilter = tags.map((tag) => `docusaurus_tag:${tag}`);\n\n  return [languageFilter, tagsFilter];\n}\n"]}]}