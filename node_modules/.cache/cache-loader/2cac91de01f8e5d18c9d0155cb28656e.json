{"remainingRequest":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js??ref--8-1!/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/theme-classic/lib-next/theme/hooks/useContextualSearchFilters.js","dependencies":[{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/theme-classic/lib-next/theme/hooks/useContextualSearchFilters.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/babel.config.js","mtime":1667479926426},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnR7dXNlQWxsRG9jc0RhdGEsdXNlQWN0aXZlUGx1Z2luQW5kVmVyc2lvbn1mcm9tJ0B0aGVtZS9ob29rcy91c2VEb2NzJztpbXBvcnR7dXNlRG9jc1ByZWZlcnJlZFZlcnNpb25CeVBsdWdpbklkLERFRkFVTFRfU0VBUkNIX1RBRyxkb2NWZXJzaW9uU2VhcmNoVGFnfWZyb20nQGRvY3VzYXVydXMvdGhlbWUtY29tbW9uJztpbXBvcnQgdXNlRG9jdXNhdXJ1c0NvbnRleHQgZnJvbSdAZG9jdXNhdXJ1cy91c2VEb2N1c2F1cnVzQ29udGV4dCc7Ly8gV2UgbWF5IHdhbnQgdG8gc3VwcG9ydCBtdWx0aXBsZSBzZWFyY2ggZW5naW5lcywgZG9uJ3QgY291cGxlIHRoYXQgdG8gQWxnb2xpYS9Eb2NTZWFyY2gKLy8gTWF5YmUgdXNlcnMgd2lsbCB3YW50IHRvIHVzZSBpdHMgb3duIHNlYXJjaCBlbmdpbmUgc29sdXRpb24KZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlQ29udGV4dHVhbFNlYXJjaEZpbHRlcnMoKXtjb25zdHtpMThufT11c2VEb2N1c2F1cnVzQ29udGV4dCgpO2NvbnN0IGFsbERvY3NEYXRhPXVzZUFsbERvY3NEYXRhKCk7Y29uc3QgYWN0aXZlUGx1Z2luQW5kVmVyc2lvbj11c2VBY3RpdmVQbHVnaW5BbmRWZXJzaW9uKCk7Y29uc3QgZG9jc1ByZWZlcnJlZFZlcnNpb25CeVBsdWdpbklkPXVzZURvY3NQcmVmZXJyZWRWZXJzaW9uQnlQbHVnaW5JZCgpO2Z1bmN0aW9uIGdldERvY1BsdWdpblRhZ3MocGx1Z2luSWQpe3ZhciBfYWN0aXZlUGx1Z2luQW5kVmVyc2ksX3JlZjtjb25zdCBhY3RpdmVWZXJzaW9uPShhY3RpdmVQbHVnaW5BbmRWZXJzaW9uPT09bnVsbHx8YWN0aXZlUGx1Z2luQW5kVmVyc2lvbj09PXZvaWQgMD92b2lkIDA6KF9hY3RpdmVQbHVnaW5BbmRWZXJzaT1hY3RpdmVQbHVnaW5BbmRWZXJzaW9uLmFjdGl2ZVBsdWdpbik9PT1udWxsfHxfYWN0aXZlUGx1Z2luQW5kVmVyc2k9PT12b2lkIDA/dm9pZCAwOl9hY3RpdmVQbHVnaW5BbmRWZXJzaS5wbHVnaW5JZCk9PT1wbHVnaW5JZD9hY3RpdmVQbHVnaW5BbmRWZXJzaW9uLmFjdGl2ZVZlcnNpb246dW5kZWZpbmVkO2NvbnN0IHByZWZlcnJlZFZlcnNpb249ZG9jc1ByZWZlcnJlZFZlcnNpb25CeVBsdWdpbklkW3BsdWdpbklkXTtjb25zdCBsYXRlc3RWZXJzaW9uPWFsbERvY3NEYXRhW3BsdWdpbklkXS52ZXJzaW9ucy5maW5kKHY9PnYuaXNMYXN0KTtjb25zdCB2ZXJzaW9uPShfcmVmPWFjdGl2ZVZlcnNpb24hPT1udWxsJiZhY3RpdmVWZXJzaW9uIT09dm9pZCAwP2FjdGl2ZVZlcnNpb246cHJlZmVycmVkVmVyc2lvbikhPT1udWxsJiZfcmVmIT09dm9pZCAwP19yZWY6bGF0ZXN0VmVyc2lvbjtyZXR1cm4gZG9jVmVyc2lvblNlYXJjaFRhZyhwbHVnaW5JZCx2ZXJzaW9uLm5hbWUpO31jb25zdCB0YWdzPVtERUZBVUxUX1NFQVJDSF9UQUcsLi4uT2JqZWN0LmtleXMoYWxsRG9jc0RhdGEpLm1hcChnZXREb2NQbHVnaW5UYWdzKV07cmV0dXJue2xvY2FsZTppMThuLmN1cnJlbnRMb2NhbGUsdGFnc307fQ=="},{"version":3,"sources":["/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/theme-classic/lib-next/theme/hooks/useContextualSearchFilters.js"],"names":["useAllDocsData","useActivePluginAndVersion","useDocsPreferredVersionByPluginId","DEFAULT_SEARCH_TAG","docVersionSearchTag","useDocusaurusContext","useContextualSearchFilters","i18n","allDocsData","activePluginAndVersion","docsPreferredVersionByPluginId","getDocPluginTags","pluginId","activeVersion","activePlugin","undefined","preferredVersion","latestVersion","versions","find","v","isLast","version","name","tags","Object","keys","map","locale","currentLocale"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,OAASA,cAAT,CAAyBC,yBAAzB,KAA0D,sBAA1D,CACA,OAASC,iCAAT,CAA4CC,kBAA5C,CAAgEC,mBAAhE,KAA2F,0BAA3F,CACA,MAAOC,CAAAA,oBAAP,KAAiC,kCAAjC,CACA;AACA;AACA,cAAe,SAASC,CAAAA,0BAAT,EAAsC,CACnD,KAAM,CACJC,IADI,EAEFF,oBAAoB,EAFxB,CAGA,KAAMG,CAAAA,WAAW,CAAGR,cAAc,EAAlC,CACA,KAAMS,CAAAA,sBAAsB,CAAGR,yBAAyB,EAAxD,CACA,KAAMS,CAAAA,8BAA8B,CAAGR,iCAAiC,EAAxE,CAEA,QAASS,CAAAA,gBAAT,CAA0BC,QAA1B,CAAoC,gCAClC,KAAMC,CAAAA,aAAa,CAAG,CAAAJ,sBAAsB,OAAtB,EAAAA,sBAAsB,SAAtB,+BAAAA,sBAAsB,CAAEK,YAAxB,sEAAsCF,QAAtC,IAAmDA,QAAnD,CAA8DH,sBAAsB,CAACI,aAArF,CAAqGE,SAA3H,CACA,KAAMC,CAAAA,gBAAgB,CAAGN,8BAA8B,CAACE,QAAD,CAAvD,CACA,KAAMK,CAAAA,aAAa,CAAGT,WAAW,CAACI,QAAD,CAAX,CAAsBM,QAAtB,CAA+BC,IAA/B,CAAoCC,CAAC,EAAIA,CAAC,CAACC,MAA3C,CAAtB,CACA,KAAMC,CAAAA,OAAO,OAAGT,aAAH,SAAGA,aAAH,UAAGA,aAAH,CAAoBG,gBAApB,6BAAwCC,aAArD,CACA,MAAOb,CAAAA,mBAAmB,CAACQ,QAAD,CAAWU,OAAO,CAACC,IAAnB,CAA1B,CACD,CAED,KAAMC,CAAAA,IAAI,CAAG,CAACrB,kBAAD,CAAqB,GAAGsB,MAAM,CAACC,IAAP,CAAYlB,WAAZ,EAAyBmB,GAAzB,CAA6BhB,gBAA7B,CAAxB,CAAb,CACA,MAAO,CACLiB,MAAM,CAAErB,IAAI,CAACsB,aADR,CAELL,IAFK,CAAP,CAID","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useAllDocsData, useActivePluginAndVersion } from '@theme/hooks/useDocs';\nimport { useDocsPreferredVersionByPluginId, DEFAULT_SEARCH_TAG, docVersionSearchTag } from '@docusaurus/theme-common';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\n// We may want to support multiple search engines, don't couple that to Algolia/DocSearch\n// Maybe users will want to use its own search engine solution\nexport default function useContextualSearchFilters() {\n  const {\n    i18n\n  } = useDocusaurusContext();\n  const allDocsData = useAllDocsData();\n  const activePluginAndVersion = useActivePluginAndVersion();\n  const docsPreferredVersionByPluginId = useDocsPreferredVersionByPluginId();\n\n  function getDocPluginTags(pluginId) {\n    const activeVersion = activePluginAndVersion?.activePlugin?.pluginId === pluginId ? activePluginAndVersion.activeVersion : undefined;\n    const preferredVersion = docsPreferredVersionByPluginId[pluginId];\n    const latestVersion = allDocsData[pluginId].versions.find(v => v.isLast);\n    const version = activeVersion ?? preferredVersion ?? latestVersion;\n    return docVersionSearchTag(pluginId, version.name);\n  }\n\n  const tags = [DEFAULT_SEARCH_TAG, ...Object.keys(allDocsData).map(getDocPluginTags)];\n  return {\n    locale: i18n.currentLocale,\n    tags\n  };\n}"]}]}