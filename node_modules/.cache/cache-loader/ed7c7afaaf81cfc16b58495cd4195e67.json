{"remainingRequest":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js??ref--8-1!/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/theme-search-algolia/src/theme/SearchBar/index.js","dependencies":[{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/theme-search-algolia/src/theme/SearchBar/index.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/babel.config.js","mtime":1667479926426},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvZmFzci9Xb3Jrc3BhY2UvZmFzci9yb2RyaWd1ZXNmYXMuZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIjsvKioKICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2ltcG9ydCBSZWFjdCx7dXNlU3RhdGUsdXNlUmVmLHVzZUNhbGxiYWNrLHVzZU1lbW99ZnJvbSdyZWFjdCc7aW1wb3J0e2NyZWF0ZVBvcnRhbH1mcm9tJ3JlYWN0LWRvbSc7aW1wb3J0IHVzZURvY3VzYXVydXNDb250ZXh0IGZyb20nQGRvY3VzYXVydXMvdXNlRG9jdXNhdXJ1c0NvbnRleHQnO2ltcG9ydHt1c2VIaXN0b3J5fWZyb20nQGRvY3VzYXVydXMvcm91dGVyJztpbXBvcnR7dXNlQmFzZVVybFV0aWxzfWZyb20nQGRvY3VzYXVydXMvdXNlQmFzZVVybCc7aW1wb3J0IExpbmsgZnJvbSdAZG9jdXNhdXJ1cy9MaW5rJztpbXBvcnQgSGVhZCBmcm9tJ0Bkb2N1c2F1cnVzL0hlYWQnO2ltcG9ydCB1c2VTZWFyY2hRdWVyeSBmcm9tJ0B0aGVtZS9ob29rcy91c2VTZWFyY2hRdWVyeSc7aW1wb3J0e0RvY1NlYXJjaEJ1dHRvbix1c2VEb2NTZWFyY2hLZXlib2FyZEV2ZW50c31mcm9tJ0Bkb2NzZWFyY2gvcmVhY3QnO2ltcG9ydCB1c2VBbGdvbGlhQ29udGV4dHVhbEZhY2V0RmlsdGVycyBmcm9tJ0B0aGVtZS9ob29rcy91c2VBbGdvbGlhQ29udGV4dHVhbEZhY2V0RmlsdGVycyc7bGV0IERvY1NlYXJjaE1vZGFsPW51bGw7ZnVuY3Rpb24gSGl0KF9yZWYpe2xldHtoaXQsY2hpbGRyZW59PV9yZWY7cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTGluayx7dG86aGl0LnVybH0sY2hpbGRyZW4pO31mdW5jdGlvbiBSZXN1bHRzRm9vdGVyKF9yZWYyKXtsZXR7c3RhdGUsb25DbG9zZX09X3JlZjI7Y29uc3R7Z2VuZXJhdGVTZWFyY2hQYWdlTGlua309dXNlU2VhcmNoUXVlcnkoKTtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLHt0bzpnZW5lcmF0ZVNlYXJjaFBhZ2VMaW5rKHN0YXRlLnF1ZXJ5KSxvbkNsaWNrOm9uQ2xvc2V9LCJTZWUgYWxsICIsc3RhdGUuY29udGV4dC5uYkhpdHMsIiByZXN1bHRzIik7fWZ1bmN0aW9uIERvY1NlYXJjaChfcmVmMyl7dmFyIF9wcm9wcyRzZWFyY2hQYXJhbWV0ZSxfcHJvcHMkc2VhcmNoUGFyYW1ldGUyO2xldHtjb250ZXh0dWFsU2VhcmNoLC4uLnByb3BzfT1fcmVmMztjb25zdHtzaXRlTWV0YWRhdGF9PXVzZURvY3VzYXVydXNDb250ZXh0KCk7Y29uc3QgY29udGV4dHVhbFNlYXJjaEZhY2V0RmlsdGVycz11c2VBbGdvbGlhQ29udGV4dHVhbEZhY2V0RmlsdGVycygpO2NvbnN0IGNvbmZpZ0ZhY2V0RmlsdGVycz0oX3Byb3BzJHNlYXJjaFBhcmFtZXRlPShfcHJvcHMkc2VhcmNoUGFyYW1ldGUyPXByb3BzLnNlYXJjaFBhcmFtZXRlcnMpPT09bnVsbHx8X3Byb3BzJHNlYXJjaFBhcmFtZXRlMj09PXZvaWQgMD92b2lkIDA6X3Byb3BzJHNlYXJjaFBhcmFtZXRlMi5mYWNldEZpbHRlcnMpIT09bnVsbCYmX3Byb3BzJHNlYXJjaFBhcmFtZXRlIT09dm9pZCAwP19wcm9wcyRzZWFyY2hQYXJhbWV0ZTpbXTtjb25zdCBmYWNldEZpbHRlcnM9Y29udGV4dHVhbFNlYXJjaD8vLyBNZXJnZSBjb250ZXh0dWFsIHNlYXJjaCBmaWx0ZXJzIHdpdGggY29uZmlnIGZpbHRlcnMKWy4uLmNvbnRleHR1YWxTZWFyY2hGYWNldEZpbHRlcnMsLi4uY29uZmlnRmFjZXRGaWx0ZXJzXTovLyAuLi4gb3IgdXNlIGNvbmZpZyBmYWNldEZpbHRlcnMKY29uZmlnRmFjZXRGaWx0ZXJzOy8vIHdlIGxldCB1c2VyIG92ZXJyaWRlIGRlZmF1bHQgc2VhcmNoUGFyYW1ldGVycyBpZiBoZSB3YW50cyB0bwpjb25zdCBzZWFyY2hQYXJhbWV0ZXJzPXsuLi5wcm9wcy5zZWFyY2hQYXJhbWV0ZXJzLGZhY2V0RmlsdGVyc307Y29uc3R7d2l0aEJhc2VVcmx9PXVzZUJhc2VVcmxVdGlscygpO2NvbnN0IGhpc3Rvcnk9dXNlSGlzdG9yeSgpO2NvbnN0IHNlYXJjaEJ1dHRvblJlZj11c2VSZWYobnVsbCk7Y29uc3RbaXNPcGVuLHNldElzT3Blbl09dXNlU3RhdGUoZmFsc2UpO2NvbnN0W2luaXRpYWxRdWVyeSxzZXRJbml0aWFsUXVlcnldPXVzZVN0YXRlKG51bGwpO2NvbnN0IGltcG9ydERvY1NlYXJjaE1vZGFsSWZOZWVkZWQ9dXNlQ2FsbGJhY2soKCk9PntpZihEb2NTZWFyY2hNb2RhbCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO31yZXR1cm4gUHJvbWlzZS5hbGwoW2ltcG9ydCgnQGRvY3NlYXJjaC9yZWFjdC9tb2RhbCcpLGltcG9ydCgnQGRvY3NlYXJjaC9yZWFjdC9zdHlsZScpLGltcG9ydCgnLi9zdHlsZXMuY3NzJyldKS50aGVuKF9yZWY0PT57bGV0W3tEb2NTZWFyY2hNb2RhbDpNb2RhbH1dPV9yZWY0O0RvY1NlYXJjaE1vZGFsPU1vZGFsO30pO30sW10pO2NvbnN0IG9uT3Blbj11c2VDYWxsYmFjaygoKT0+e2ltcG9ydERvY1NlYXJjaE1vZGFsSWZOZWVkZWQoKS50aGVuKCgpPT57c2V0SXNPcGVuKHRydWUpO30pO30sW2ltcG9ydERvY1NlYXJjaE1vZGFsSWZOZWVkZWQsc2V0SXNPcGVuXSk7Y29uc3Qgb25DbG9zZT11c2VDYWxsYmFjaygoKT0+e3NldElzT3BlbihmYWxzZSk7fSxbc2V0SXNPcGVuXSk7Y29uc3Qgb25JbnB1dD11c2VDYWxsYmFjayhldmVudD0+e2ltcG9ydERvY1NlYXJjaE1vZGFsSWZOZWVkZWQoKS50aGVuKCgpPT57c2V0SXNPcGVuKHRydWUpO3NldEluaXRpYWxRdWVyeShldmVudC5rZXkpO30pO30sW2ltcG9ydERvY1NlYXJjaE1vZGFsSWZOZWVkZWQsc2V0SXNPcGVuLHNldEluaXRpYWxRdWVyeV0pO2NvbnN0IG5hdmlnYXRvcj11c2VSZWYoe25hdmlnYXRlKF9yZWY1KXtsZXR7aXRlbVVybH09X3JlZjU7aGlzdG9yeS5wdXNoKGl0ZW1VcmwpO319KS5jdXJyZW50O2NvbnN0IHRyYW5zZm9ybUl0ZW1zPXVzZVJlZihpdGVtcz0+e3JldHVybiBpdGVtcy5tYXAoaXRlbT0+ey8vIFdlIHRyYW5zZm9ybSB0aGUgYWJzb2x1dGUgVVJMIGludG8gYSByZWxhdGl2ZSBVUkwuCi8vIEFsdGVybmF0aXZlbHksIHdlIGNhbiB1c2UgYG5ldyBVUkwoaXRlbS51cmwpYCBidXQgaXQncyBub3QKLy8gc3VwcG9ydGVkIGluIElFLgpjb25zdCBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTthLmhyZWY9aXRlbS51cmw7cmV0dXJuey4uLml0ZW0sdXJsOndpdGhCYXNlVXJsKGAke2EucGF0aG5hbWV9JHthLmhhc2h9YCl9O30pO30pLmN1cnJlbnQ7Y29uc3QgcmVzdWx0c0Zvb3RlckNvbXBvbmVudD11c2VNZW1vKCgpPT5mb290ZXJQcm9wcz0+LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVzdWx0c0Zvb3RlcixfZXh0ZW5kcyh7fSxmb290ZXJQcm9wcyx7b25DbG9zZTpvbkNsb3NlfSkpLFtvbkNsb3NlXSk7Y29uc3QgdHJhbnNmb3JtU2VhcmNoQ2xpZW50PXVzZUNhbGxiYWNrKHNlYXJjaENsaWVudD0+e3NlYXJjaENsaWVudC5hZGRBbGdvbGlhQWdlbnQoJ2RvY3VzYXVydXMnLHNpdGVNZXRhZGF0YS5kb2N1c2F1cnVzVmVyc2lvbik7cmV0dXJuIHNlYXJjaENsaWVudDt9LFtzaXRlTWV0YWRhdGEuZG9jdXNhdXJ1c1ZlcnNpb25dKTt1c2VEb2NTZWFyY2hLZXlib2FyZEV2ZW50cyh7aXNPcGVuLG9uT3BlbixvbkNsb3NlLG9uSW5wdXQsc2VhcmNoQnV0dG9uUmVmfSk7cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsbnVsbCwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChIZWFkLG51bGwsLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpbmsiLHtyZWw6InByZWNvbm5lY3QiLGhyZWY6YGh0dHBzOi8vJHtwcm9wcy5hcHBJZH0tZHNuLmFsZ29saWEubmV0YCxjcm9zc09yaWdpbjoiYW5vbnltb3VzIn0pKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChEb2NTZWFyY2hCdXR0b24se29uVG91Y2hTdGFydDppbXBvcnREb2NTZWFyY2hNb2RhbElmTmVlZGVkLG9uRm9jdXM6aW1wb3J0RG9jU2VhcmNoTW9kYWxJZk5lZWRlZCxvbk1vdXNlT3ZlcjppbXBvcnREb2NTZWFyY2hNb2RhbElmTmVlZGVkLG9uQ2xpY2s6b25PcGVuLHJlZjpzZWFyY2hCdXR0b25SZWZ9KSxpc09wZW4mJi8qI19fUFVSRV9fKi9jcmVhdGVQb3J0YWwoLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jU2VhcmNoTW9kYWwsX2V4dGVuZHMoe29uQ2xvc2U6b25DbG9zZSxpbml0aWFsU2Nyb2xsWTp3aW5kb3cuc2Nyb2xsWSxpbml0aWFsUXVlcnk6aW5pdGlhbFF1ZXJ5LG5hdmlnYXRvcjpuYXZpZ2F0b3IsdHJhbnNmb3JtSXRlbXM6dHJhbnNmb3JtSXRlbXMsaGl0Q29tcG9uZW50OkhpdCxyZXN1bHRzRm9vdGVyQ29tcG9uZW50OnJlc3VsdHNGb290ZXJDb21wb25lbnQsdHJhbnNmb3JtU2VhcmNoQ2xpZW50OnRyYW5zZm9ybVNlYXJjaENsaWVudH0scHJvcHMse3NlYXJjaFBhcmFtZXRlcnM6c2VhcmNoUGFyYW1ldGVyc30pKSxkb2N1bWVudC5ib2R5KSk7fWZ1bmN0aW9uIFNlYXJjaEJhcigpe2NvbnN0e3NpdGVDb25maWd9PXVzZURvY3VzYXVydXNDb250ZXh0KCk7cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jU2VhcmNoLHNpdGVDb25maWcudGhlbWVDb25maWcuYWxnb2xpYSk7fWV4cG9ydCBkZWZhdWx0IFNlYXJjaEJhcjs="},{"version":3,"sources":["/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/theme-search-algolia/src/theme/SearchBar/index.js"],"names":["React","useState","useRef","useCallback","useMemo","createPortal","useDocusaurusContext","useHistory","useBaseUrlUtils","Link","Head","useSearchQuery","DocSearchButton","useDocSearchKeyboardEvents","useAlgoliaContextualFacetFilters","DocSearchModal","Hit","hit","children","url","ResultsFooter","state","onClose","generateSearchPageLink","query","context","nbHits","DocSearch","contextualSearch","props","siteMetadata","contextualSearchFacetFilters","configFacetFilters","searchParameters","facetFilters","withBaseUrl","history","searchButtonRef","isOpen","setIsOpen","initialQuery","setInitialQuery","importDocSearchModalIfNeeded","Promise","resolve","all","then","Modal","onOpen","onInput","event","key","navigator","navigate","itemUrl","push","current","transformItems","items","map","item","a","document","createElement","href","pathname","hash","resultsFooterComponent","footerProps","transformSearchClient","searchClient","addAlgoliaAgent","docusaurusVersion","appId","window","scrollY","body","SearchBar","siteConfig","themeConfig","algolia"],"mappings":"0HAAA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,MAAzB,CAAiCC,WAAjC,CAA8CC,OAA9C,KAA4D,OAA5D,CACA,OAAQC,YAAR,KAA2B,WAA3B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,kCAAjC,CACA,OAAQC,UAAR,KAAyB,oBAAzB,CACA,OAAQC,eAAR,KAA8B,wBAA9B,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CACA,OAAQC,eAAR,CAAyBC,0BAAzB,KAA0D,kBAA1D,CACA,MAAOC,CAAAA,gCAAP,KAA6C,+CAA7C,CAEA,GAAIC,CAAAA,cAAc,CAAG,IAArB,CAEA,QAASC,CAAAA,GAAT,MAA8B,IAAjB,CAACC,GAAD,CAAMC,QAAN,CAAiB,MAC5B,mBAAO,oBAAC,IAAD,EAAM,EAAE,CAAED,GAAG,CAACE,GAAd,EAAoBD,QAApB,CAAP,CACD,CAED,QAASE,CAAAA,aAAT,OAAyC,IAAlB,CAACC,KAAD,CAAQC,OAAR,CAAkB,OACvC,KAAM,CAACC,sBAAD,EAA2BZ,cAAc,EAA/C,CAEA,mBACE,oBAAC,IAAD,EAAM,EAAE,CAAEY,sBAAsB,CAACF,KAAK,CAACG,KAAP,CAAhC,CAA+C,OAAO,CAAEF,OAAxD,aACWD,KAAK,CAACI,OAAN,CAAcC,MADzB,YADF,CAKD,CAED,QAASC,CAAAA,SAAT,OAAiD,qDAA9B,CAACC,gBAAD,CAAmB,GAAGC,KAAtB,CAA8B,OAC/C,KAAM,CAACC,YAAD,EAAiBxB,oBAAoB,EAA3C,CAEA,KAAMyB,CAAAA,4BAA4B,CAAGjB,gCAAgC,EAArE,CAEA,KAAMkB,CAAAA,kBAAkB,gDAAGH,KAAK,CAACI,gBAAT,iDAAG,uBAAwBC,YAA3B,+DAA2C,EAAnE,CAEA,KAAMA,CAAAA,YAAY,CAAGN,gBAAgB,CACjC;AACA,CAAC,GAAGG,4BAAJ,CAAkC,GAAGC,kBAArC,CAFiC,CAGjC;AACAA,kBAJJ,CAMA;AACA,KAAMC,CAAAA,gBAAgB,CAAG,CACvB,GAAGJ,KAAK,CAACI,gBADc,CAEvBC,YAFuB,CAAzB,CAKA,KAAM,CAACC,WAAD,EAAgB3B,eAAe,EAArC,CACA,KAAM4B,CAAAA,OAAO,CAAG7B,UAAU,EAA1B,CACA,KAAM8B,CAAAA,eAAe,CAAGnC,MAAM,CAAC,IAAD,CAA9B,CACA,KAAM,CAACoC,MAAD,CAASC,SAAT,EAAsBtC,QAAQ,CAAC,KAAD,CAApC,CACA,KAAM,CAACuC,YAAD,CAAeC,eAAf,EAAkCxC,QAAQ,CAAC,IAAD,CAAhD,CAEA,KAAMyC,CAAAA,4BAA4B,CAAGvC,WAAW,CAAC,IAAM,CACrD,GAAIY,cAAJ,CAAoB,CAClB,MAAO4B,CAAAA,OAAO,CAACC,OAAR,EAAP,CACD,CAED,MAAOD,CAAAA,OAAO,CAACE,GAAR,CAAY,CACjB,OAAO,wBAAP,CADiB,CAEjB,OAAO,wBAAP,CAFiB,CAGjB,OAAO,cAAP,CAHiB,CAAZ,EAIJC,IAJI,CAIC,OAA+B,IAA9B,CAAC,CAAC/B,cAAc,CAAEgC,KAAjB,CAAD,CAA8B,OACrChC,cAAc,CAAGgC,KAAjB,CACD,CANM,CAAP,CAOD,CAZ+C,CAY7C,EAZ6C,CAAhD,CAcA,KAAMC,CAAAA,MAAM,CAAG7C,WAAW,CAAC,IAAM,CAC/BuC,4BAA4B,GAAGI,IAA/B,CAAoC,IAAM,CACxCP,SAAS,CAAC,IAAD,CAAT,CACD,CAFD,EAGD,CAJyB,CAIvB,CAACG,4BAAD,CAA+BH,SAA/B,CAJuB,CAA1B,CAMA,KAAMjB,CAAAA,OAAO,CAAGnB,WAAW,CAAC,IAAM,CAChCoC,SAAS,CAAC,KAAD,CAAT,CACD,CAF0B,CAExB,CAACA,SAAD,CAFwB,CAA3B,CAIA,KAAMU,CAAAA,OAAO,CAAG9C,WAAW,CACxB+C,KAAD,EAAW,CACTR,4BAA4B,GAAGI,IAA/B,CAAoC,IAAM,CACxCP,SAAS,CAAC,IAAD,CAAT,CACAE,eAAe,CAACS,KAAK,CAACC,GAAP,CAAf,CACD,CAHD,EAID,CANwB,CAOzB,CAACT,4BAAD,CAA+BH,SAA/B,CAA0CE,eAA1C,CAPyB,CAA3B,CAUA,KAAMW,CAAAA,SAAS,CAAGlD,MAAM,CAAC,CACvBmD,QAAQ,OAAY,IAAX,CAACC,OAAD,CAAW,OAClBlB,OAAO,CAACmB,IAAR,CAAaD,OAAb,EACD,CAHsB,CAAD,CAAN,CAIfE,OAJH,CAMA,KAAMC,CAAAA,cAAc,CAAGvD,MAAM,CAAEwD,KAAD,EAAW,CACvC,MAAOA,CAAAA,KAAK,CAACC,GAAN,CAAWC,IAAD,EAAU,CACzB;AACA;AACA;AACA,KAAMC,CAAAA,CAAC,CAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV,CACAF,CAAC,CAACG,IAAF,CAASJ,IAAI,CAACzC,GAAd,CAEA,MAAO,CACL,GAAGyC,IADE,CAELzC,GAAG,CAAEgB,WAAW,CAAE,GAAE0B,CAAC,CAACI,QAAS,GAAEJ,CAAC,CAACK,IAAK,EAAxB,CAFX,CAAP,CAID,CAXM,CAAP,CAYD,CAb4B,CAAN,CAapBV,OAbH,CAeA,KAAMW,CAAAA,sBAAsB,CAAG/D,OAAO,CACpC,IAAOgE,WAAD,eAAiB,oBAAC,aAAD,aAAmBA,WAAnB,EAAgC,OAAO,CAAE9C,OAAzC,GADa,CAEpC,CAACA,OAAD,CAFoC,CAAtC,CAKA,KAAM+C,CAAAA,qBAAqB,CAAGlE,WAAW,CACtCmE,YAAD,EAAkB,CAChBA,YAAY,CAACC,eAAb,CACE,YADF,CAEEzC,YAAY,CAAC0C,iBAFf,EAKA,MAAOF,CAAAA,YAAP,CACD,CARsC,CASvC,CAACxC,YAAY,CAAC0C,iBAAd,CATuC,CAAzC,CAYA3D,0BAA0B,CAAC,CACzByB,MADyB,CAEzBU,MAFyB,CAGzB1B,OAHyB,CAIzB2B,OAJyB,CAKzBZ,eALyB,CAAD,CAA1B,CAQA,mBACE,qDACE,oBAAC,IAAD,mBAIE,4BACE,GAAG,CAAC,YADN,CAEE,IAAI,CAAG,WAAUR,KAAK,CAAC4C,KAAM,kBAF/B,CAGE,WAAW,CAAC,WAHd,EAJF,CADF,cAYE,oBAAC,eAAD,EACE,YAAY,CAAE/B,4BADhB,CAEE,OAAO,CAAEA,4BAFX,CAGE,WAAW,CAAEA,4BAHf,CAIE,OAAO,CAAEM,MAJX,CAKE,GAAG,CAAEX,eALP,EAZF,CAoBGC,MAAM,eACLjC,YAAY,cACV,oBAAC,cAAD,WACE,OAAO,CAAEiB,OADX,CAEE,cAAc,CAAEoD,MAAM,CAACC,OAFzB,CAGE,YAAY,CAAEnC,YAHhB,CAIE,SAAS,CAAEY,SAJb,CAKE,cAAc,CAAEK,cALlB,CAME,YAAY,CAAEzC,GANhB,CAOE,sBAAsB,CAAEmD,sBAP1B,CAQE,qBAAqB,CAAEE,qBARzB,EASMxC,KATN,EAUE,gBAAgB,CAAEI,gBAVpB,GADU,CAaV6B,QAAQ,CAACc,IAbC,CArBhB,CADF,CAuCD,CAED,QAASC,CAAAA,SAAT,EAAqB,CACnB,KAAM,CAACC,UAAD,EAAexE,oBAAoB,EAAzC,CACA,mBAAO,oBAAC,SAAD,CAAewE,UAAU,CAACC,WAAX,CAAuBC,OAAtC,CAAP,CACD,CAED,cAAeH,CAAAA,SAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {useState, useRef, useCallback, useMemo} from 'react';\nimport {createPortal} from 'react-dom';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {useHistory} from '@docusaurus/router';\nimport {useBaseUrlUtils} from '@docusaurus/useBaseUrl';\nimport Link from '@docusaurus/Link';\nimport Head from '@docusaurus/Head';\nimport useSearchQuery from '@theme/hooks/useSearchQuery';\nimport {DocSearchButton, useDocSearchKeyboardEvents} from '@docsearch/react';\nimport useAlgoliaContextualFacetFilters from '@theme/hooks/useAlgoliaContextualFacetFilters';\n\nlet DocSearchModal = null;\n\nfunction Hit({hit, children}) {\n  return <Link to={hit.url}>{children}</Link>;\n}\n\nfunction ResultsFooter({state, onClose}) {\n  const {generateSearchPageLink} = useSearchQuery();\n\n  return (\n    <Link to={generateSearchPageLink(state.query)} onClick={onClose}>\n      See all {state.context.nbHits} results\n    </Link>\n  );\n}\n\nfunction DocSearch({contextualSearch, ...props}) {\n  const {siteMetadata} = useDocusaurusContext();\n\n  const contextualSearchFacetFilters = useAlgoliaContextualFacetFilters();\n\n  const configFacetFilters = props.searchParameters?.facetFilters ?? [];\n\n  const facetFilters = contextualSearch\n    ? // Merge contextual search filters with config filters\n      [...contextualSearchFacetFilters, ...configFacetFilters]\n    : // ... or use config facetFilters\n      configFacetFilters;\n\n  // we let user override default searchParameters if he wants to\n  const searchParameters = {\n    ...props.searchParameters,\n    facetFilters,\n  };\n\n  const {withBaseUrl} = useBaseUrlUtils();\n  const history = useHistory();\n  const searchButtonRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [initialQuery, setInitialQuery] = useState(null);\n\n  const importDocSearchModalIfNeeded = useCallback(() => {\n    if (DocSearchModal) {\n      return Promise.resolve();\n    }\n\n    return Promise.all([\n      import('@docsearch/react/modal'),\n      import('@docsearch/react/style'),\n      import('./styles.css'),\n    ]).then(([{DocSearchModal: Modal}]) => {\n      DocSearchModal = Modal;\n    });\n  }, []);\n\n  const onOpen = useCallback(() => {\n    importDocSearchModalIfNeeded().then(() => {\n      setIsOpen(true);\n    });\n  }, [importDocSearchModalIfNeeded, setIsOpen]);\n\n  const onClose = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const onInput = useCallback(\n    (event) => {\n      importDocSearchModalIfNeeded().then(() => {\n        setIsOpen(true);\n        setInitialQuery(event.key);\n      });\n    },\n    [importDocSearchModalIfNeeded, setIsOpen, setInitialQuery],\n  );\n\n  const navigator = useRef({\n    navigate({itemUrl}) {\n      history.push(itemUrl);\n    },\n  }).current;\n\n  const transformItems = useRef((items) => {\n    return items.map((item) => {\n      // We transform the absolute URL into a relative URL.\n      // Alternatively, we can use `new URL(item.url)` but it's not\n      // supported in IE.\n      const a = document.createElement('a');\n      a.href = item.url;\n\n      return {\n        ...item,\n        url: withBaseUrl(`${a.pathname}${a.hash}`),\n      };\n    });\n  }).current;\n\n  const resultsFooterComponent = useMemo(\n    () => (footerProps) => <ResultsFooter {...footerProps} onClose={onClose} />,\n    [onClose],\n  );\n\n  const transformSearchClient = useCallback(\n    (searchClient) => {\n      searchClient.addAlgoliaAgent(\n        'docusaurus',\n        siteMetadata.docusaurusVersion,\n      );\n\n      return searchClient;\n    },\n    [siteMetadata.docusaurusVersion],\n  );\n\n  useDocSearchKeyboardEvents({\n    isOpen,\n    onOpen,\n    onClose,\n    onInput,\n    searchButtonRef,\n  });\n\n  return (\n    <>\n      <Head>\n        {/* This hints the browser that the website will load data from Algolia,\n        and allows it to preconnect to the DocSearch cluster. It makes the first\n        query faster, especially on mobile. */}\n        <link\n          rel=\"preconnect\"\n          href={`https://${props.appId}-dsn.algolia.net`}\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n\n      <DocSearchButton\n        onTouchStart={importDocSearchModalIfNeeded}\n        onFocus={importDocSearchModalIfNeeded}\n        onMouseOver={importDocSearchModalIfNeeded}\n        onClick={onOpen}\n        ref={searchButtonRef}\n      />\n\n      {isOpen &&\n        createPortal(\n          <DocSearchModal\n            onClose={onClose}\n            initialScrollY={window.scrollY}\n            initialQuery={initialQuery}\n            navigator={navigator}\n            transformItems={transformItems}\n            hitComponent={Hit}\n            resultsFooterComponent={resultsFooterComponent}\n            transformSearchClient={transformSearchClient}\n            {...props}\n            searchParameters={searchParameters}\n          />,\n          document.body,\n        )}\n    </>\n  );\n}\n\nfunction SearchBar() {\n  const {siteConfig} = useDocusaurusContext();\n  return <DocSearch {...siteConfig.themeConfig.algolia} />;\n}\n\nexport default SearchBar;\n"]}]}