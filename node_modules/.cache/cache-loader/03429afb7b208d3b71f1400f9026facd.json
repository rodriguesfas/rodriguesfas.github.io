{"remainingRequest":"/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/docs/ebook/champs-da-galaxia.md","dependencies":[{"path":"/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/docs/ebook/champs-da-galaxia.md","mtime":1644496754657},{"path":"/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-ebook-champs-da-galaxia-md-488.json","mtime":1644496771093},{"path":"/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1644465007939},{"path":"/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js","mtime":1644465009559},{"path":"/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1644465008051},{"path":"/home/rodriguesfas/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1644465011591}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvcm9kcmlndWVzZmFzL1dvcmtzcGFjZS9mYXNyL3JvZHJpZ3Vlc2Zhcy5naXRodWIuaW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDonY2hhbXBzLWRhLWdhbGF4aWEnLHRpdGxlOidTdW3DoXJpbyd9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJlYm9vay9jaGFtcHMtZGEtZ2FsYXhpYSIsImlkIjoiZWJvb2svY2hhbXBzLWRhLWdhbGF4aWEiLCJpc0RvY3NIb21lUGFnZSI6ZmFsc2UsInRpdGxlIjoiU3Vtw6FyaW8iLCJkZXNjcmlwdGlvbiI6IkludHJvZHXDp8OjbyBhbyBkZXNlbnZvbHZpbWVudG8gZGUgam9nb3MgY29tIGphdmEiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2Vib29rL2NoYW1wcy1kYS1nYWxheGlhLm1kIiwic2x1ZyI6Ii9lYm9vay9jaGFtcHMtZGEtZ2FsYXhpYSIsInBlcm1hbGluayI6Ii9kb2NzL2Vib29rL2NoYW1wcy1kYS1nYWxheGlhIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9kb2N1c2F1cnVzL2VkaXQvbWFzdGVyL3dlYnNpdGUvZG9jcy9lYm9vay9jaGFtcHMtZGEtZ2FsYXhpYS5tZCIsInZlcnNpb24iOiJjdXJyZW50Iiwic2lkZWJhciI6InNvbWVTaWRlYmFyIiwicHJldmlvdXMiOnsidGl0bGUiOiJzdW1hcmlvIiwicGVybWFsaW5rIjoiL2RvY3MvcHJvZ3JhbW1pbmcvcmVkdWMvc3VtYXJpbyJ9fTsvKiBAanN4UnVudGltZSBjbGFzc2ljICovIC8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHRvYz1be3ZhbHVlOidJbnRyb2R1w6fDo28gYW8gZGVzZW52b2x2aW1lbnRvIGRlIGpvZ29zIGNvbSBqYXZhJyxpZDonaW50cm9kdcOnw6NvLWFvLWRlc2Vudm9sdmltZW50by1kZS1qb2dvcy1jb20tamF2YScsY2hpbGRyZW46W3t2YWx1ZTonT2JqZXRpdm8nLGlkOidvYmpldGl2bycsY2hpbGRyZW46W119LHt2YWx1ZTonUHJvdMOzdGlwbycsaWQ6J3Byb3TDs3RpcG8nLGNoaWxkcmVuOltdfSx7dmFsdWU6J1Zpc8OjbyBJbmR1c3RyaWFsJyxpZDondmlzw6NvLWluZHVzdHJpYWwnLGNoaWxkcmVuOltdfV19LHt2YWx1ZTonQ29uZmlndXJhw6fDtWVzIGRvIGFtYmllbnRlJyxpZDonY29uZmlndXJhw6fDtWVzLWRvLWFtYmllbnRlJyxjaGlsZHJlbjpbe3ZhbHVlOidDcmlhbmRvIGEgYmFzZSBkbyBqb2dvJyxpZDonY3JpYW5kby1hLWJhc2UtZG8tam9nbycsY2hpbGRyZW46W119LHt2YWx1ZTonRGVzZW5oYW5kbyBvIGJhY2tncm91bmQnLGlkOidkZXNlbmhhbmRvLW8tYmFja2dyb3VuZCcsY2hpbGRyZW46W119LHt2YWx1ZTonU3ByaXRlJyxpZDonc3ByaXRlJyxjaGlsZHJlbjpbXX1dfSx7dmFsdWU6J0NyaWFuZG8gbyBwbGF5ZXInLGlkOidjcmlhbmRvLW8tcGxheWVyJyxjaGlsZHJlbjpbe3ZhbHVlOidEZXNlbmhhbmRvIG8gcGxheWVyJyxpZDonZGVzZW5oYW5kby1vLXBsYXllcicsY2hpbGRyZW46W119LHt2YWx1ZTonTW92ZW5kbyBvIHBsYXllcicsaWQ6J21vdmVuZG8tby1wbGF5ZXInLGNoaWxkcmVuOltdfSx7dmFsdWU6J0FqdXN0ZXMgZmluYWlzIGRvIHBsYXllciBuYSB0ZWxhJyxpZDonYWp1c3Rlcy1maW5haXMtZG8tcGxheWVyLW5hLXRlbGEnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0F0aXJhbmRvJyxpZDonYXRpcmFuZG8nLGNoaWxkcmVuOltdfV19LHt2YWx1ZTonQ3JpYW5kbycsaWQ6J2NyaWFuZG8nLGNoaWxkcmVuOlt7dmFsdWU6J0Rlc2VuaGFuZG8gSW5pbWlnb3MnLGlkOidkZXNlbmhhbmRvLWluaW1pZ29zJyxjaGlsZHJlbjpbXX1dfSx7dmFsdWU6J0RldGVjdGFuZG8gQ29saXPDtWVzJyxpZDonZGV0ZWN0YW5kby1jb2xpc8O1ZXMnLGNoaWxkcmVuOlt7dmFsdWU6J01vc3RyYW5kbyByZXN1bHRhZG9zIGUgY3JpYW5kbyBlZmVpdG9zJyxpZDonbW9zdHJhbmRvLXJlc3VsdGFkb3MtZS1jcmlhbmRvLWVmZWl0b3MnLGNoaWxkcmVuOltdfV19LHt2YWx1ZTonVGVsYSBHYW1lIE92ZXInLGlkOid0ZWxhLWdhbWUtb3ZlcicsY2hpbGRyZW46W119LHt2YWx1ZTonTW92ZW5kbyBvIEJhY2tncm91bmQnLGlkOidtb3ZlbmRvLW8tYmFja2dyb3VuZCcsY2hpbGRyZW46W119LHt2YWx1ZTonQ29uaGVjZW5kbyBhIGxpYiBKbGF5ZXInLGlkOidjb25oZWNlbmRvLWEtbGliLWpsYXllcicsY2hpbGRyZW46W3t2YWx1ZTonQWRpY2lvbmFuZG8gbcO6c2ljYScsaWQ6J2FkaWNpb25hbmRvLW3DunNpY2EnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0FkaWNpb25hciBzb25zIGRlIGVmZWl0b3MnLGlkOidhZGljaW9uYXItc29ucy1kZS1lZmVpdG9zJyxjaGlsZHJlbjpbXX1dfSx7dmFsdWU6J0NyaWFuZG8gbyBleGVjdXTDoXZlbCBkbyBqb2dvJyxpZDonY3JpYW5kby1vLWV4ZWN1dMOhdmVsLWRvLWpvZ28nLGNoaWxkcmVuOltdfSx7dmFsdWU6J0Rlc2FmaW9zJyxpZDonZGVzYWZpb3MnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0NvbmNsdXPDo28nLGlkOidjb25jbHVzw6NvJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidSZWZlcsOqbmNpYXMgYmlibGlvZ3LDoWZpY2FzJyxpZDoncmVmZXLDqm5jaWFzLWJpYmxpb2dyw6FmaWNhcycsY2hpbGRyZW46W119XTtjb25zdCBsYXlvdXRQcm9wcz17dG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgyIix7ImlkIjoiaW50cm9kdcOnw6NvLWFvLWRlc2Vudm9sdmltZW50by1kZS1qb2dvcy1jb20tamF2YSJ9LGBJbnRyb2R1w6fDo28gYW8gZGVzZW52b2x2aW1lbnRvIGRlIGpvZ29zIGNvbSBqYXZhYCksbWR4KCJwIixudWxsLGBPIGNsw6Fzc2ljbyBTdXBlciBNYXJpbyBCcm9zLCBmb2kgcHJhdGljYW1lbnRlIG8gcHJpbWVpcm8gam9nbyBxdWUgam9ndWVpIGVtIG1lYWRvcyAxOTk2IG5hIHBsYXRhZm9ybWEgTmludGVuZG8sIGxhbsOnYWRvIGVtIDE5ODUgZm9pIG8gcHJpbWVpcm8gam9nbyBjb20gcm9sYWdlbSBsYXRlcmFsLCByZWN1cnNvIGNvbmhlY2lkbyBjb21vIHNsaWRlLXNjcm9saW5nLiBPIGpvZ28gw6kgbyBtYWlzIHZlbmRpZG8gbmEgaGlzdMOzcmlhIGRvcyB2w61kZW9zIGdhbWVzIGUgaW5zcGlyb3UgaW5jb250w6F2ZWlzIGltaXRhw6fDtWVzIHF1ZSBhanVkYXJhbSBhIGZpeGFyIGVzc2UgZXN0aWxvLiBPIGpvZ2Fkb3IgY29udHJvbGF2YSBvIHByaW5jaXBhbCBwcm90YWdvbmlzdGEgZGEgc2VyaWUsIE1hcmlvLiBPIG9iamV0aXZvIGRvIGpvZ28gw6kgcGVyY29ycmVyIG8gUmVpbm8gZG8gQ29ndW1lbG8sIHNvYnJldml2ZXIgYXMgZm9yw6dhcyBkbyBwcmluY2lwYWwgdmlsw6NvIEJvd3NlciwgZSBzYWx2YXIgYSBwcmluY2VzYSBQZWFjaCBlIHNldSByZWlubyBkbyBkb23DrW5pbyBkb3MgS29vcCBUcm9vcGFzLmApLG1keCgicCIsbnVsbCxtZHgoImEiLHtwYXJlbnROYW1lOiJwIiwiaHJlZiI6IiMifSxgRmlndXJhIDAxYCkpLG1keCgicCIsbnVsbCxgVW0gZG9zIG1ldXMgam9nb3MgZmF2b3JpdG9zIGxvZ28gZW0gc2VndWlkYSBmb2kgbyBBZXJvIEZpZ2h0ZXJzIGNvbmhlY2lkbyBjb21vIFNvbmljIFdpbmdzIG5vIEphcMOjbywgdW0gam9nbyBlbGV0csO0bmljbyBkZSBuYXZlIGVzdGlsbyBTaG90IGVtIHVwIGNvbSByb2xhZ2VtIHZlcnRpY2FsLiBMYW7Dp2FkbyBvcmlnaW5hbG1lbnRlIGNvbSBub21lIOKAnFNvbmljIFdpbmdz4oCdIHBhcmEgZmxpcGVyYW1hIGVtIDE5OTIgcXVlIGZvaSBhbHRlcmFkbyBlbSAxOTk0IHF1YW5kbyBsYW7Dp2FkbyBwYXJhIGEgcGxhdGFmb3JtYSBTTkVTLiBOZXNzZSBjbMOhc3NpY28gdm9jw6ogw6kgdW0gcGlsb3RvIGRlIGF2acOjbywgZSBjb20gdW1hIG5hdmUgbWlsaXRhLCB0ZW0gbyBkZXNhZmlvIGRlIGFjYWJhciBjb20gYXMgYmFzZXMgaW5pbWlnYXMuIERldG9uZSBhcyBuYXZlcywgcGVndWUgbm92YXMgYXJtYXMgZSB0aXJvcyBlIGNvbnF1aXN0ZSBncmFuZGVzIHRlcnJpdMOzcmlvcy5gKSxtZHgoInAiLG51bGwsbWR4KCJhIix7cGFyZW50TmFtZToicCIsImhyZWYiOiIjIn0sYEZpZ3VyYSAwMmApKSxtZHgoImgzIix7ImlkIjoib2JqZXRpdm8ifSxgT2JqZXRpdm9gKSxtZHgoInAiLG51bGwsYEluc3BpcmFyIGUgbW90aXZhciBlc3R1ZGFudGVzIG5vdmF0b3Mgb3UgYXTDqSBtZXNtbyB2ZXRlcmFub3MgcHJvZ3JhbWFkb3JlcywgcGFyYSBwcm9ncmFtYcOnw6NvIHZvbHRhZGEgYSBkZXNlbnZvbHZpbWVudG8gZGUgam9nb3MsIHZlciBxdWUgw6kgcG9zc8OtdmVsIGNyaWFyIGJvbnMgam9nb3MgY29tIGxpbmd1YWdlbSBkZSBhbHRvIG7DrXZlbCBjb20gSmF2YSBlIGVudGVuZGVyIGEgbWVjw6JuaWNhIGLDoXNpY2EgZGUgdW0gam9nby5gKSxtZHgoImgzIix7ImlkIjoicHJvdMOzdGlwbyJ9LGBQcm90w7N0aXBvYCksbWR4KCJwIixudWxsLG1keCgiYSIse3BhcmVudE5hbWU6InAiLCJocmVmIjoiIyJ9LGBGaWd1cmEgMDNgKSksbWR4KCJwIixudWxsLGBVc2FyZW1vcyBvIGpvZ28gQWVybyBGaWdodGVycyBjb21vIGluc3BpcmHDp8OjbyBwYXJhIG8gcHJvdMOzdGlwbyBxdWUgaXJlbW9zIGRlc2Vudm9sdmVyIGpvZ28gY2hhbWRvIENoYW1wcyBkYSBHYWzDoXhpYSwgdW0gZ8OqbmVybyBlc3BhY2lhbCwgbW9zdHJhIHVtYSBiYXRhbGhhIGdhbMOhY3RpY2EgZW50cmUgZGl2ZXJzYXMgZXNwZWNlaXM7IGNvbnRyb2xlIHN1YSBuYXZlLCBwZWd1ZSBvIG3DoXhpbW8gZGUgcG93ZXItdXAg4oCccG90ZW5jaWHigJ0gcGFyYSBzdWEgYXJtYSBlIGRlc3RydWEgdHVkbyBvIHF1ZSB2aWVyIGVtIHN1YSBmcmVudGUsIHZvY8OqIGZvaSBlc2NvbGhpZG8gcGFyYSBhIG1pc3PDo28gZGUgY29tYmF0ZXIgbyBleGVyY2l0byBkbyBHZW5lcmFsIEdyb25nLCBldml0YW5kbyBhc3NpbSBxdWUgZWxlIGdvdmVybmUgZSBjcmllIHVtIGNhb3Mgbm8gaGlwZXJlc3Bhw6dvLmApLG1keCgicCIsbnVsbCxgQSBoaXN0w7NyaWEgZG8gam9nbyDDqSBvIG1hcmNvIGluaWNpYWwsIGUgbyBkb2N1bWVudG8gcXVlIMOpIHV0aWxpemFkbyBwYXJhIHByb2pldGFyIG8gam9nbyDDqSBjb25oZWNpZG8gY29tbyBHYW1lIERlc2lnbmVyLCBuZWxlIMOpIHF1ZSBzZSBlc2NyZXZlIG8gcHJvamV0byBkbyBqb2dvIGEgc2VyIGRlc2Vudm9sdmlkbywgaGlzdG9yaWEsIHBlcnNvbmFnZW5zLCBjZW7DoXJpb3MsIGpvZ2Fkb3IsIGluaW1pZ29zLCBkZXNhZmlvcywgbG9naWNhIGRvIGpvZ28sIGVtIGZpbSB0dWRvIG8gcXVlIGNvbnN0YXJhIG5vIHNldSBqb2dvLCBwb3JlbSBuw6NvIMOpIG8gZm9jbyBwcmluY2lwYWwgZGVzc2UgbGl2cm8gZSBuw6NvIGlyZW1vcyBub3MgYXByb2Z1bmRhciBuZXNzYSBkb2N1bWVudGHDp8Ojby5gKSxtZHgoInAiLG51bGwsYE7Do28gaXJlbW9zIHV0aWxpemFyIG5lbmh1bSBGcmFtZXdvcmsgcGFyYSB0cmF0YW1lbnRvIGdyw6FmaWNvLCB1c2FyZW1vcyB1bWEgY2xhc3MgZ3LDoWZpY2EgMkQgcXVlIG8gamF2YSBwb3NzdcOtIGUgbWVzbW8gYXNzaW0gY2hlZ2FyZW1vcyBhIHVtIGpvZ28gYmVtIGludGVyZXNzYW50ZSwgcG9pcyBvIG9iamV0aXZvIMOpIHNlIGZhbWlsaWFyaXphciBlIHRlciBjb25jZWl0b3MgYsOhc2ljbyBwYXJhIGRlc2Vudm9sdmltZW50byBkZSBnYW1lcywgZXNzZXMgY29uY2VpdG9zIHNlbXByZSBlc3RhcsOjbyBwcmVzZW50ZXMsIHNlamEgZW0gam9nb3Mgc2ltcGxlcyBvdSBhdmFuw6dhZG9zLmApLG1keCgiaDMiLHsiaWQiOiJ2aXPDo28taW5kdXN0cmlhbCJ9LGBWaXPDo28gSW5kdXN0cmlhbGApLG1keCgicCIsbnVsbCxgUHJvZ3JhbWHDp8OjbyDDqSBhcGVuYXMgdW1hIHBhcnRlIGRvIGRlc2Vudm9sdmltZW50byBkZSBnYW1lLiBFbXByZXNhcyBmb2NhZGFzIGVtIGRlc2Vudm9sdmltZW50byBkZSBqb2dvcyBwb3NzdWVtIHJvdGVpcmlzdGFzIHBhcmEgY3JpYXIgYSBoaXN0w7NyaWEgZG8gZ2FtZSwgZGVzaWduZXIgcGFyYSBkZWZpbmlyIG8gbWVsaG9yIHZpc3VhbCBkbyBqb2dvLCBwcm9maXNzaW9uYWlzIGRlIHNvbSBwYXJhIHRyaWxoYXMgc29ub3JhcyBlIGVmZWl0b3MsIGRlc2lnbmVyIGRlIGludGVyZmFjZSBwYXJhIGRlZmluaXIgY29tbyBzZXJpYSBhIGV4cGVyacOqbmNpYSBkbyBqb2dhZG9yIG5vIGdhbWUsIGVudHJlIG91dHJvcy4gSm9nb3MgY29tbyDigJxDcmlzeXPigJ0gY2hlZ2EgYXRlciA2NTAgcGVzc29hcyBlbSB1bWEgZXF1aXBlLCB0b2RvcyBlbnZvbHZpZG9zIHBhcmEgc2UgYWxjYW7Dp2FyIG8gZXNwZXJhZG8gc3VjZXNzby5gKSxtZHgoInAiLG51bGwsbWR4KCJhIix7cGFyZW50TmFtZToicCIsImhyZWYiOiIjIn0sYEZpZ3VyYSAwNGApKSxtZHgoImgyIix7ImlkIjoiY29uZmlndXJhw6fDtWVzLWRvLWFtYmllbnRlIn0sYENvbmZpZ3VyYcOnw7VlcyBkbyBhbWJpZW50ZWApLG1keCgicCIsbnVsbCxgQSBjb25maWd1cmHDp8OjbyBkbyBhbWJpZW50ZSBkZSBkZXNlbnZvbHZpbWVudG8gdXRpbGl6YWRvIMOpOiBJREUgRWNsaXBzZSwgcG9kZS1zZSBzZXIgcXVhaXNxdWVyIHZlcnPDo28gZG8gZWNsaXBzZSwgb3UgYXTDqSBtZXNtbyBzZSB2b2PDqiBwcmVmZXJpciBwb2RlIHVzYXIgb3V0cmFzIElERSBjb21vIE5ldGJlYW5zIG91IEludGVsbGlKIElkZWEsIEpESyBKYXZhNyBSdW4gVGltZSBvdSBzdXBlcmlvciBlIG8gSlJFLmApLG1keCgicCIsbnVsbCxgQ2FzbyB2b2PDqiBhaW5kYSBuw6NvIHRlbmhhIGluc3RhbGFkbyB2b2PDqiBwb2RlIGVzdGEgYWRxdWlyaW5kbyBlbTpgKSxtZHgoInAiLG51bGwsYEJhaXhhciBvIEVjbGlwc2UgYXF1aS4gQmFpeGFyIG8gSkRLIGUgbyBKUkUgYXF1aS4gQmFpeGFyIEpMYXllciBhcXVpLiBCYWl4YXIgbyBwcm9qZXRvIOKAnGPDs2RpZ28gZm9udGXigJ0gZSBpbWFnZW5zIGRvIGpvZ28gZSBvIGFycXVpdm8gLmphciBleGVjdXTDoXZlbCBhcXVpOmApLG1keCgiaDMiLHsiaWQiOiJjcmlhbmRvLWEtYmFzZS1kby1qb2dvIn0sYENyaWFuZG8gYSBiYXNlIGRvIGpvZ29gKSxtZHgoInAiLG51bGwsYENvbSBvIGVjbGlwc2UgaW5zdGFsYWRvIGUgY29ycmV0YW1lbnRlIGNvbmZpZ3VyYWRvIGVtIHNldSBjb21wdXRhZG9yLCBqw6EgcG9kZW1vcyBjb21lw6dhci4gQ3JpZSB1bSBwcm9qZXRvIGNvbSBvIG5vbWUgQ2hhbXBzRGFHYWxheGlhLmApLG1keCgicCIsbnVsbCxgTmEgcGFzdGEgc3JjIGNyaWUgdW0gcGFjb3RlIGNvbSBvIG5vbWUgYnIuY29tLmdhbWUuYXBwYCksbWR4KCJwIixudWxsLGBEZW50cm8gZG8gcGFjb3RlIGNyaWUgdW1hIGNsYXNzIGNvbSBvIG5vbWUgR2FtZS5gKSxtZHgoInAiLG51bGwsYEFnb3JhIHBvZGVtb3MgcHJvZ3JhbWFyIG5lc3NhIGNsYXNzIHF1ZSBmb2kgY3JpYWRhLiBFbGEgZGV2ZSBoZXJkYXIgZGEgY2xhc3MgSkZyYW1lLCBjb21wb25lbnRlIGRvIHBhY290ZSBzd2luZyBxdWUgcG9zc3VpIHRvZG9zIG9zIGNvbXBvbmVudGVzIG5lY2Vzc8OhcmlvcyBwYXJhIGEgY29uc3RydcOnw6NvIGRhIGphbmVsYSBkbyBqb2dvLmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIse3BhcmVudE5hbWU6InByZSJ9LGBwdWJsaWMgY2xhc3MgR2FtZSBleHRlbmRzIEpGcmFtZSB7fQpgKSksbWR4KCJwIixudWxsLGBBZ29yYSBjcmlhcmVtb3Mgb3Mgc2VndWludGVzIG3DqXRvZG9zIGUgbyBjb25zdHJ1dG9yIGRhIGNsYXNzLCBuYSBjbGFzcyBHYW1lLmphdmEsIG7Do28gY2l0YXJlaSBtdWl0b3MgZGV0YWxoZXMgcG9pcyBvIGPDs2RpZ28gZXN0w6EgY29tZW50YWRvOmApLG1keCgicCIsbnVsbCxgTyBtw6l0b2RvIG1haW4gw6kgbyBwcmluY2lwYWwgcmVzcG9uc8OhdmVsIHBlbGEgZXhlY3XDp8OjbyBkYSBhcGxpY2HDp8Ojby5gKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUifSxgLyoqCiAqIE3DqXRvZG8gcHJpbmNpcGFsIC0gc3RhcnQgYSBhcGxpY2HDp8Ojby4KICogQHBhcmFtIGFyZ3MKICovCnB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmdzW10pIHsKICAgIG5ldyBHYW1lKCk7Cn0KYCkpLG1keCgicCIsbnVsbCxgRXNzZSDDqSBvIGNvbnN0cnV0b3IgZGEgbm9zc2EgY2xhc3MuYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIn0sYC8qKgogKiBDb25zdHJ1dG9yLgogKi8KcHJvdGVjdGVkIEdhbWUoKSB7CiAgICAvKiBDaGFtYSBvIG3DqXRvZG9jb21wb25lbnRlcyAqLwogICAgY29tcG9uZW50ZXMoKTsKfQpgKSksbWR4KCJwIixudWxsLGBFc3NlIG3DqXRvZG8gcXVlIGNvbmZpZ3VyYSBhIG5vc3NhIGphbmVsYS5gKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUifSxgLyoqCiAqIENvbmZpZ3VyYSBhIEphbmVsYS4KICovCnB1YmxpYyB2b2lkIGNvbXBvbmVudGVzKCkgewogICAgLyogVGl0dWxvIGRhIEphbmVsYSovCiAgICBzZXRUaXRsZSgiQ2hhbXBzIGRhIEdhbMOheGlhIik7CiAgICAvKiBQZXJtaXRlIGVuY2VycmFyIGFwbGNhw6fDo28qLwogICAgc2V0RGVmYXVsdENsb3NlT3BlcmF0aW9uKEpGcmFtZS5FWElUX09OX0NMT1NFKTsKICAgIC8qIERlZmluZSB0YW1hbmhvIGRhIGphbmVsYSAqLwogICAgc2V0U2l6ZSg2MDAsIDYwMCk7CiAgICAvKiBJbnN0YW5jaWEgYSBqYW5lbGEgbm8gY2VudHJvZGEgdGVsYSAqLwogICAgc2V0TG9jYXRpb25SZWxhdGl2ZVRvKG51bGwpOwogICAgLyogQmxvcXVlaWEgcmVkaW1lbnNpb25hbWVudG8gZGEgamFuZWxhKi8KICAgIHNldFJlc2l6YWJsZShmYWxzZSk7CiAgICAvKiBEZWZpbmUgYSBqYW5lbGEgdmlzw612ZWwqLwogICAgc2V0VmlzaWJsZSh0cnVlKTsKfQpgKSksbWR4KCJwIixudWxsLGBBZ29yYSBleGVjdXRlIGEgYXBsaWNhw6fDo28gZSB0ZXJlbW9zIHVtYSBqYW5lbGEgY29tbyBlc3NhOmApLG1keCgiaDMiLHsiaWQiOiJkZXNlbmhhbmRvLW8tYmFja2dyb3VuZCJ9LGBEZXNlbmhhbmRvIG8gYmFja2dyb3VuZGApLG1keCgicCIsbnVsbCxgUG9kZW1vcyB2ZXIgcXVlIGFpbmRhIGVzdMOhIG11aXRvIGxvbmdlIGRlIHRlcm1vcyB1bSBqb2dvLiBDb20gbyBib3TDo28gZGlyZWl0byBkbyBtb3VzZSBjbGlxdWUgZW0gY2ltYSBkbyBwcm9qZXRvIE5ldyA+PiBGb2xkZXIgY3JpZSB1bWEgcGFzdGEgY29tIG8gbm9tZTogcmVzLiBOZXNzYSBwYXN0YSBmaWNhbSB0b2RhcyBhcyBpbWFnZW5zIGUgc29ucyBxdWUgdXRpbGl6YXJlbW9zIG5vIGpvZ28uYCksbWR4KCJwIixudWxsLGBQZWd1ZSBhcyBpbWFnZW5zIGRvIGpvZ28gcXVlIHZvY8OqIGrDoSBkZXZlIHRlciBiYWl4YWRvIGUgYWRpY2lvbmUgZGVudHJvIGRlc3NhIHBhc3RhIGp1bnRhbWVudGUgY29tIGFzIHN1YnBhc3Rhcy4gQWdvcmEgbm8gaW5pY2lvIGRhIGNsYXNzIEdhbWUuamF2YSBjcmlhcmVtb3Mgb3Mgc2VxdWVudGVzIG9iamV0b3M6YCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LGBPIG9iamV0byB0aW1lIGRhIGNsYXNzIFRpbWVyLmphdmEgY29tcG9uZW50ZSBkbyBwYWNvdGUgc3dpbmcgdXRpbGl6YXJlbW9zIHBhcmEgbWFuaXB1bGHDp8OjbyBkZSB0aHJlYWRzIGRvIGpvZ287YCkpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgicCIse3BhcmVudE5hbWU6ImxpIn0sYE8gb2JqZXRvIGZhc2UgcXVlIHVzYXJlbW9zIHBhcmEgYWNlc3NhciBhIGNsYXNzZSBGYXNlLCB1bWEgY2xhc3MgaW50ZXJuYSBxdWUgaXJlbW9zIGltcGxlbWVudGFyO2ApKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LGBPIG9iamV0byBmdW5kbyBkYSBjbGFzcyBJbWFnZS5qYXZhIGNvbXBvbmVudGUgZG8gcGFjb3RlIHN3aW5nIHV0aWxpemFyZW1vcyBwYXJhIGNhcnJlZ2FyIHVtYSBpbWFnZW0gZGUgZnVuZG8gZG8gY2Vuw6FyaW8gZG8gam9nbztgKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJwIix7cGFyZW50TmFtZToibGkifSxgTyBvYmpldG8gZ3LDoWZpY28gY29tcG9uZW50ZSBkbyBwYWNvdGUgc3dpbmcgcXVlIHVzYXJlbW9zIHBhcmEgbWFuaXB1bGFzIGFzIGltYWdlbnMgMkQgbm8gam9nby5gKSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LGAgIHByaXZhdGUgVGltZXIgdGltZXI7CnByaXZhdGUgRmFzZSBmYXNlOwpwcml2YXRlIEltYWdlIGZ1bmRvOwpwcml2YXRlIEdyYXBoaWNzMkQgZ3JhZmljbztgKSkpLG1keCgicCIsbnVsbCxgQWJhaXhvIGRvIG3DqXRvZG8gY29tcG9uZW50ZXMoKSwgY3JpYXJlbW9zIHVtYSBjbGFzcyBpbnRlcm5hIGNoYW1hZGEgTGlzdGVuZXIgZWxhIHNlcnZlIHBhcmEgZXNjdXRhciBvIHF1ZSBhY29udGVjZSBlbSB1bSBvYmpldG8gZSBhdmlzYXIgYSBvdXRybywgZWxhIGltcGxlbWVudGEgQWN0aW9uTGlzdGVuZXIsIHF1ZSBwb3NzaWJpbGl0YSBhIExpc3RlbmVyIGVzY3V0YXIgcG9yIHVtYSBhw6fDo28sIG91IHNlamEsIGVzc2EgY2xhc3Mgw6kgdW0gb3V2aW50ZSBxdWUgaW5mb3JtYSBhcyBkZXRlcm1pbmFkYXMgYcOnw7VlcyBkb3Mgb2JqZXRvcy5gKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUifSxgcHJpdmF0ZSBjbGFzcyBMaXN0ZW5lciBpbXBsZW1lbnRzIEFjdGlvbkxpc3RlbmVyIHsKICAgIHB1YmxpYyB2b2lkIGFjdGlvblBlcmZvcm1lZChBY3Rpb25FdmVudCBlKSB7fQp9CmApKSxtZHgoInAiLG51bGwsYEFiYWl4byBkYSBjbGFzcyBpbnRlcm5hIExpc3RlbmVyLCBjcmlhcmVtb3MgbWFpcyB1bWEgY2xhc3MgY29tIG8gbm9tZSBkZSBGYXNlIHF1ZSBoZXJkYSBkZSBKUGFuZWwsIHF1ZSDDqSB1bSBjb21wb25lbnRlIGRvIHBhY290ZSBzd2luZyBxdWUgdGVtIGNvbW8gcHJpbmNpcGFsIGZ1bsOnw6NvIHNlcnZpciBkZSBjb250ZWluZXIgcGFyYSBvdXRyb3MgY29tcG9uZW50ZXMuYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIn0sYHB1YmxpYyBjbGFzcyBGYXNlIGV4dGVuZHMgSlBhbmVsIHsKICAgIHByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcgc2VyaWFsVmVyc2lvblVJRCA9IDFMOwoKICAgIC8qIERlZmluZSBhcyBkaW1lbnPDtWVzIGRvIEpQYW5lbCAqLwogICAgcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgQUxUVVJBID0gNjAwOwogICAgcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgTEFSR1VSQSA9IDYwMDsKCiAgICBwcm90ZWN0ZWQgRmFzZSgpIHsKICAgICAgICBzZXREb3VibGVCdWZmZXJlZCh0cnVlKTsKICAgIH0KCiAgICBwdWJsaWMgdm9pZCBwYWludChHcmFwaGljcyBnKSB7CiAgICAgICAgZ3JhZmljbyA9IChHcmFwaGljczJEKSBnOwogICAgICAgIGdyYWZpY28uZHJhd0ltYWdlKGZ1bmRvLCAwLCAwLCBudWxsKTsKICAgICAgICBnLmRpc3Bvc2UoKTsKICAgIH0KCiAgICAvKioKICAgICoKICAgICogQHJldHVybgogICAgKi8KICAgIHB1YmxpYyBpbnQgZ2V0TGFyKCkgewogICAgICAgIHJldHVybiBMQVJHVVJBOwogICAgfQoKICAgIC8qKgogICAgKgogICAgKiBAcmV0dXJuCiAgICAqLwogICAgcHVibGljIGludCBnZXRBbHQoKSB7CiAgICAgICAgcmV0dXJuIEFMVFVSQTsKICAgIH0KCn0KYCkpLG1keCgicCIsbnVsbCxgQ3JpZSB1bSBtw6l0b2RvIGluaWNpYWxpemFyIGluaWNpYWxpemFyKCk7IGFww7NzIG8gbcOpdG9kbyBjb21wb25lbnRlcygpLmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIse3BhcmVudE5hbWU6InByZSJ9LGBwdWJsaWMgdm9pZCBpbmljaWFsaXphcigpIHsKICAgIGZhc2UgPSBuZXcgRmFzZSgpOwogICAgYWRkKGZhc2UpOwogICAgSW1hZ2VJY29uIHJlZmVyZW5jaWEgPSBuZXcgSW1hZ2VJY29uKCJyZXMvZnVuZG9GYXNlL2NlbmFyaW8xLmpwZyIpOwogICAgZnVuZG8gPSByZWZlcmVuY2lhLmdldEltYWdlKCk7Cn0KYCkpLG1keCgicCIsbnVsbCxgQmVtIHBvciBmaW0gbm8gbcOpdG9kbyBpbmljaWFsaXphcigpLCBhZGljaW9uZSBvIHNlZ3VpbnRlIHRyZWNobyBkZSBjw7NkaWdvIHF1ZSDDqSByZXNwb25zw6F2ZWwgcG9yIGluc3RhbmNpYXIgdW1hIHRocmVhZCByZWZlcmVuY2lhbmRvIGEgY2xhc3MgaW50ZXJuYSBMaXN0ZW5lci5gKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUifSxgLypJbnN0w6JuY2lhIHVtYSB0aHJlYWQgZG8gam9nbywgY29tIGEgY2xhc3MgTGlzdGVuZXIqLwp0aW1lciA9IG5ldyBUaW1lcig1LCBuZXcgTGlzdGVuZXIoKSk7CnRpbWVyLnN0YXJ0KCk7LyppbmljaWEgYSB0aHJlYWQqLwpgKSksbWR4KCJwIixudWxsLGBDaGFtYSBvIG3DqXRvZG8gaW5pY2lhbGl6YXIoKSBubyBjb25zdHJ1dG9yIGRhIGNsYXNzIEdhbWUuamF2YWApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIse3BhcmVudE5hbWU6InByZSJ9LGAvKioKICogQ29uc3RydXRvci4KICovCnByb3RlY3RlZCBHYW1lKCkgewogICAgY29tcG9uZW50ZXMoKTsKICAgIGluaWNpYWxpemFyKCk7Cn0KYCkpLG1keCgicCIsbnVsbCxgRGVudHJvIGRvIG3DqXRvZG8gYWN0aW9uUGVyZm9ybWVkKEFjdGlvbkV2ZW50IGUpLCBkYSBjbGFzcyBMaXN0ZW5lciBhZGljaW9uZSBvIHNlZ3VpbnRlIGPDs2RpZ286YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIn0sYGZhc2UucmVwYWludCgpOwpgKSksbWR4KCJoMyIseyJpZCI6InNwcml0ZSJ9LGBTcHJpdGVgKSxtZHgoImgyIix7ImlkIjoiY3JpYW5kby1vLXBsYXllciJ9LGBDcmlhbmRvIG8gcGxheWVyYCksbWR4KCJoMyIseyJpZCI6ImRlc2VuaGFuZG8tby1wbGF5ZXIifSxgRGVzZW5oYW5kbyBvIHBsYXllcmApLG1keCgiaDMiLHsiaWQiOiJtb3ZlbmRvLW8tcGxheWVyIn0sYE1vdmVuZG8gbyBwbGF5ZXJgKSxtZHgoImgzIix7ImlkIjoiYWp1c3Rlcy1maW5haXMtZG8tcGxheWVyLW5hLXRlbGEifSxgQWp1c3RlcyBmaW5haXMgZG8gcGxheWVyIG5hIHRlbGFgKSxtZHgoImgzIix7ImlkIjoiYXRpcmFuZG8ifSxgQXRpcmFuZG9gKSxtZHgoImgyIix7ImlkIjoiY3JpYW5kbyJ9LGBDcmlhbmRvYCksbWR4KCJoMyIseyJpZCI6ImRlc2VuaGFuZG8taW5pbWlnb3MifSxgRGVzZW5oYW5kbyBJbmltaWdvc2ApLG1keCgiaDIiLHsiaWQiOiJkZXRlY3RhbmRvLWNvbGlzw7VlcyJ9LGBEZXRlY3RhbmRvIENvbGlzw7Vlc2ApLG1keCgiaDMiLHsiaWQiOiJtb3N0cmFuZG8tcmVzdWx0YWRvcy1lLWNyaWFuZG8tZWZlaXRvcyJ9LGBNb3N0cmFuZG8gcmVzdWx0YWRvcyBlIGNyaWFuZG8gZWZlaXRvc2ApLG1keCgiaDIiLHsiaWQiOiJ0ZWxhLWdhbWUtb3ZlciJ9LGBUZWxhIEdhbWUgT3ZlcmApLG1keCgiaDIiLHsiaWQiOiJtb3ZlbmRvLW8tYmFja2dyb3VuZCJ9LGBNb3ZlbmRvIG8gQmFja2dyb3VuZGApLG1keCgiaDIiLHsiaWQiOiJjb25oZWNlbmRvLWEtbGliLWpsYXllciJ9LGBDb25oZWNlbmRvIGEgbGliIEpsYXllcmApLG1keCgiaDMiLHsiaWQiOiJhZGljaW9uYW5kby1tw7pzaWNhIn0sYEFkaWNpb25hbmRvIG3DunNpY2FgKSxtZHgoImgzIix7ImlkIjoiYWRpY2lvbmFyLXNvbnMtZGUtZWZlaXRvcyJ9LGBBZGljaW9uYXIgc29ucyBkZSBlZmVpdG9zYCksbWR4KCJoMiIseyJpZCI6ImNyaWFuZG8tby1leGVjdXTDoXZlbC1kby1qb2dvIn0sYENyaWFuZG8gbyBleGVjdXTDoXZlbCBkbyBqb2dvYCksbWR4KCJoMiIseyJpZCI6ImRlc2FmaW9zIn0sYERlc2FmaW9zYCksbWR4KCJoMiIseyJpZCI6ImNvbmNsdXPDo28ifSxgQ29uY2x1c8Ojb2ApLG1keCgiaDIiLHsiaWQiOiJyZWZlcsOqbmNpYXMtYmlibGlvZ3LDoWZpY2FzIn0sYFJlZmVyw6puY2lhcyBiaWJsaW9ncsOhZmljYXNgKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}