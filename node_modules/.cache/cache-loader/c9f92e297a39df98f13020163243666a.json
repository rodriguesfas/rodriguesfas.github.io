{"remainingRequest":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/fasr/Workspace/fasr/rodriguesfas.github.io/docs/robotics/sbotics/seguidor-de-linha.md","dependencies":[{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/docs/robotics/sbotics/seguidor-de-linha.md","mtime":1667479926466},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-robotics-sbotics-seguidor-de-linha-md-0f3.json","mtime":1667483611142},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/home/fasr/Workspace/fasr/rodriguesfas.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvZmFzci9Xb3Jrc3BhY2UvZmFzci9yb2RyaWd1ZXNmYXMuZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17fTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJ1bnZlcnNpb25lZElkIjoicm9ib3RpY3Mvc2JvdGljcy9zZWd1aWRvci1kZS1saW5oYSIsImlkIjoicm9ib3RpY3Mvc2JvdGljcy9zZWd1aWRvci1kZS1saW5oYSIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJzZWd1aWRvci1kZS1saW5oYSIsImRlc2NyaXB0aW9uIjoiU2VndWlkb3IgZGUgTGluaGEiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL3JvYm90aWNzL3Nib3RpY3Mvc2VndWlkb3ItZGUtbGluaGEubWQiLCJzbHVnIjoiL3JvYm90aWNzL3Nib3RpY3Mvc2VndWlkb3ItZGUtbGluaGEiLCJwZXJtYWxpbmsiOiIvZG9jcy9yb2JvdGljcy9zYm90aWNzL3NlZ3VpZG9yLWRlLWxpbmhhIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9kb2N1c2F1cnVzL2VkaXQvbWFzdGVyL3dlYnNpdGUvZG9jcy9yb2JvdGljcy9zYm90aWNzL3NlZ3VpZG9yLWRlLWxpbmhhLm1kIiwidmVyc2lvbiI6ImN1cnJlbnQifTsvKiBAanN4UnVudGltZSBjbGFzc2ljICovIC8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHRvYz1bXTtjb25zdCBsYXlvdXRQcm9wcz17dG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsYFNlZ3VpZG9yIGRlIExpbmhhCiNTZWd1aWRvciBkZSBsaW5oYSAxClNlZ3VlIGxpbmhhIHBhcmEgZnJlbnRlLmApLG1keCgicCIsbnVsbCxgQ3VydmFzIGRlIDE4MMK6IHBhcmEgZXNxdWVyZGEgZSBkaXJlaXRhLmApLG1keCgicCIsbnVsbCxgU3VwZXJhIGd1ZXBzLmApLG1keCgicCIsbnVsbCxgU3VwZXJhIHJlZHV0b3IgZGUgdmVsb2NpZGFkZS5gKSxtZHgoInAiLG51bGwsYCAgbnVtZXJvIHNlbnNvckVzcTEgPSAwCm51bWVybyBzZW5zb3JFc3EyID0gMApudW1lcm8gc2Vuc29yRGlyMSA9IDAKbnVtZXJvIHNlbnNvckRpcjIgPSAwYCksbWR4KCJwIixudWxsLGAgIG51bWVybyBsaW1pYXIgPSAyNGApLG1keCgicCIsbnVsbCxgICB0YXJlZmEgY2ljbG97CmVucXVhbnRvICh2ZXJkYWRlaXJvKSBmYXJlaXsKZXNjcmV2ZXJudW1lcm8oMSwgbHV6KDIpKQplc2NyZXZlcm51bWVybygyLCBsdXooMykpCmVzY3JldmVybnVtZXJvKDMsIGx1eig0KSlgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUifSxgICBzZSAobHV6KDIpPmxpbWlhciBlIGx1eigzKTxsaW1pYXIgZSBsdXooNCk+bGltaWFyKSBlbnRhbyB7CiAgICAgIGZyZW50ZSgyMDApCiAgfXNlbmFvIHNlIChsdXooMik+bGltaWFyIGUgbHV6KDQpPmxpbWlhcikgZW50YW97CiAgICAgIGZyZW50ZSgxMDApCiAgfXNlbmFvIHNlKGx1eigyKTxsaW1pYXIpIGVudGFvewogICAgICBtb3ZlcihuZWdhdGl2bygxMDApLCAxMDApCiAgICAgIGVzcGVyYXIoMTAwKQogIH1zZW5hbyBzZShsdXooNCk8bGltaWFyKSBlbnRhb3sKICAgICAgbW92ZXIoMTAwLCBuZWdhdGl2bygxMDApKQogICAgICBlc3BlcmFyKDEwMCkgICAgICAKICB9CmApKSxtZHgoInAiLG51bGwsYCAgfQp9YCksbWR4KCJwIixudWxsLGAgIGluaWNpbwpjaWNsbygpYCxtZHgoImJyIix7cGFyZW50TmFtZToicCJ9KSxgCmAsYGZpbQojU2VndWlkb3IgZGUgbGluaGEgMgpMZXZhbnRhIGVzY2F2YWRlaXJhIGFvIGluaWNpYXIuYCksbWR4KCJwIixudWxsLGBTZWd1ZSBsaW5oYSBwYXJhIGZyZW50ZS5gKSxtZHgoInAiLG51bGwsYEN1cnZhcyBkZSAxODDCuiBwYXJhIGVzcXVlZGEgZSBkaXJlaWEuYCksbWR4KCJwIixudWxsLGBDdXJ2YXMgZGUgOTDCuiBwYXJhIGVzcXVlZGEgZSBkaXJlaXRhLmApLG1keCgicCIsbnVsbCxgRGV0ZWN0YSBvYnN0w6FjdWxvLmApLG1keCgicCIsbnVsbCxgU3VwZXJhIGd1ZXBzLmApLG1keCgicCIsbnVsbCxgU3VwZXJhIHJlZHV0b3IgZGUgdmVsb2NpZGFkZS5gKSxtZHgoInAiLG51bGwsYEJhaXhhIGVzY2F2YWRlaXJhIHF1YW5kbyBzb2JlIGEgcmFtcGEuYCksbWR4KCJwIixudWxsLGAgIG51bWVybyBzZW5zb3JFc3ExID0gMApudW1lcm8gc2Vuc29yRGlyMSA9IDAKbnVtZXJvIHNlbnNvckVzcTIgPSAwCm51bWVybyBzZW5zb3JEaXIyID0gMGApLG1keCgicCIsbnVsbCxgICBudW1lcm8gbGltaWFyID0gMjAKbnVtZXJvIHZhbDEgPSAwCm51bWVybyB2YWwyID0gMApudW1lcm8gbXV0ID0gMmApLG1keCgicCIsbnVsbCxgICBib29sZWFubyBlc3RhbmFyYW1wYSA9IGZhbHNvYCksbWR4KCJwIixudWxsLGAgIHRhcmVmYSBsZXZhbnRhckVzY2F2YWRlaXJhewp2ZWxvY2lkYWRlYXR1YWRvcigxNTApCmxldmFudGFyKDEwMDApCn1gKSxtZHgoInAiLG51bGwsYCAgdGFyZWZhIGJhaXhhckVzY2F2YWRlaXJhewp2ZWxvY2lkYWRlYXR1YWRvcig1MCkKYmFpeGFyKDEwMDApCn1gKSxtZHgoInAiLG51bGwsYCAgdGFyZWZhIHNlZ3VpZG9yewpzZW5zb3JFc3ExID0gbHV6KDIpCnNlbnNvckRpcjEgPSBsdXooNCkKc2Vuc29yRXNxMiA9IGx1eigxKQpzZW5zb3JEaXIyID0gbHV6KDUpYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIn0sYCAgc2UgKHNlbnNvckVzcTEgPiBsaW1pYXIgZSBzZW5zb3JEaXIxID4gbGltaWFyKSBlbnRhbyB7CiAgZnJlbnRlKDQwKQogIH1zZW5hbyBzZShzZW5zb3JFc3ExIDwgbGltaWFyIGUgc2Vuc29yRGlyMSA+IGxpbWlhciBvdSBjb3IoMSk9PSJWRVJERSIgb3UgY29yKDIpPT0iVkVSREUiKSBlbnRhbyB7CiAgICAgIHNlIChjb3IoMSkgPT0gIlZFUkRFIiBvdSBjb3IoMikgPT0gIlZFUkRFIikgZW50YW97CiAgICAgICAgICBmcmVudGUoMTAwKQogICAgICAgICAgZXNwZXJhcig2MDApCiAgICAgICAgICAKICAgICAgICAgIGVucXVhbnRvIChsdXooMykgPiBsaW1pYXIgKSBmYXJlaSB7CiAgICAgICAgICAgICAgZGlyZWl0YSgxMDApCiAgICAgICAgICB9CiAgICAgICAgICAKICAgICAgICAgIHRyYXMoNDApCiAgICAgICAgICBlc3BlcmFyICg1MDApCiAgICAgIH0KICAgICAgc2VuYW8gc2UgKHNlbnNvckVzcTEgPCBsaW1pYXIgZSBzZW5zb3JFc3EyIDwgbGltaWFyKSBlbnRhb3sKICAgICAgICAgIGZyZW50ZSgxNTApCiAgICAgICAgICBlc3BlcmFyKDYwMCkKICAgICAgICAgIGRpcmVpdGEoMjAwKQogICAgICAgICAgZXNwZXJhcig0MDAwKQogICAgICAgICAgdHJhcyg0MCkKICAgICAgICAgIGVzcGVyYXIoNTAwKQogICAgICB9CiAgICAgIHNlbmFvewogICAgICAgICAgdmFsMSA9IHN1YnRyYWlyKHNlbnNvckVzcTEsIHNlbnNvckRpcjEpCiAgICAgICAgICB2YWwyID0gbXVsdGlwbGljYXIodmFsMSwgbXV0KQogICAgICAgICAgbW92ZXIobmVnYXRpdm8oMTAwKSwgMTAwKQogICAgICAgICAgZXNwZXJhcih2YWwyKQogICAgICB9CiAgfXNlbmFvIHNlKHNlbnNvckVzcTEgPiBsaW1pYXIgZSBzZW5zb3JEaXIxIDwgbGltaWFyKSBlbnRhbyB7CiAgICAgIHNlIChjb3IoNCk9PSJWRVJERSIgb3UgY29yKDUpPT0iVkVSREUiKSBlbnRhb3sKICAgICAgICAgIGZyZW50ZSgxMDApCiAgICAgICAgICBlc3BlcmFyKDYwMCkKICAgICAgICAgICAgICAKICAgICAgICAgIGVucXVhbnRvIChsdXooMykgPiBsaW1pYXIgKSBmYXJlaSB7CiAgICAgICAgICAgICAgZXNxdWVyZGEoMTAwKQogICAgICAgICAgfQogICAgICAgICAgCiAgICAgICAgICB0cmFzKDQwKQogICAgICAgICAgZXNwZXJhcig1MDApCiAgICAgIH0KICAgICAgc2VuYW8gc2UgKHNlbnNvckRpcjEgPCBsaW1pYXIgZSBzZW5zb3JEaXIyIDwgbGltaWFyKSBlbnRhb3sKICAgICAgICAgIGZyZW50ZSgxNTApCiAgICAgICAgICBlc3BlcmFyKDYwMCkKICAgICAgICAgIGVzcXVlcmRhKDIwMCkKICAgICAgICAgIGVzcGVyYXIoNDAwMCkKICAgICAgICAgIHRyYXMoNDApCiAgICAgICAgICBlc3BlcmFyKDUwMCkKICAgICAgfQogICAgICBzZW5hb3sKICAgICAgICAgIHZhbDEgPSBzdWJ0cmFpcihzZW5zb3JFc3ExLCBzZW5zb3JEaXIxKQogICAgICAgICAgdmFsMiA9IG11bHRpcGxpY2FyKHZhbDEsIG11dCkKICAgICAgICAgIG1vdmVyKDEwMCwgbmVnYXRpdm8oMTAwKSkKICAgICAgICAgIGVzcGVyYXIodmFsMikKICAgICAgfSAgICAKICB9CmApKSxtZHgoInAiLG51bGwsYCAgfWApLG1keCgicCIsbnVsbCxgICB0YXJlZmEgZGVzdmlvIHsKc2UgKHVsdHJhKDEpPDgpIGVudGFvIHsKZGlyZWl0YSgxMDApCmVzcGVyYXIoMzUwMCkKZnJlbnRlKDEwMCkKZXNwZXJhciAoMTIwMCkKZXNxdWVyZGEoMTAwKQplc3BlcmFyICgzMDAwKQpmcmVudGUoMTUwKQplc3BlcmFyICgxMjAwKQplc3F1ZXJkYSgyMDApCmVzcGVyYXIgKDMyMDApYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIn0sYCAgICAgIGVucXVhbnRvIChsdXogKDEpID4gbGltaWFyIGUgbHV6ICgyKSA+IGxpbWlhcikgZmFyZWkgewogICAgICAgICAgZnJlbnRlICgyMCkKICAgICAgfQoKICAgICAgZnJlbnRlICgxMDApCiAgICAgIGVzcGVyYXIgKDcwMCkKICAgICAgZGlyZWl0YSgyMDApCiAgICAgIGVzcGVyYXIoMzAwMCkKICB9CmApKSxtZHgoInAiLG51bGwsYCAgfWApLG1keCgicCIsbnVsbCxgICB0YXJlZmEgcmVzZ2F0ZURpcmVpdGF7YCksbWR4KCJwIixudWxsLGAgIH1gKSxtZHgoInAiLG51bGwsYCAgdGFyZWZhIHJlc2dhdGVFc3F1ZXJkYXtgKSxtZHgoInAiLG51bGwsYCAgfWApLG1keCgicCIsbnVsbCxgICBpbmljaW8KbGV2YW50YXJFc2NhdmFkZWlyYSgpYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIn0sYCAgZW5xdWFudG8odmVyZGFkZWlybylmYXJlaXsKICBzZShpbmNsaW5hY2FvKCk+PTMwMCBlIHVsdHJhKDMpIDwgMjIgZSB1bHRyYSg0KSA8IDIyIGUgZXN0YW5hcmFtcGEgPT0gZmFsc28pIGVudGFvewogICAgICAgICAgZXN0YW5hcmFtcGEgPSB2ZXJkYWRlaXJvCiAgICAgICAgICBiYWl4YXJFc2NhdmFkZWlyYSgpCiAgICAgIH0KICAgICAgCiAgICAgIHNlKGVzdGFuYXJhbXBhID09IGZhbHNvKSBlbnRhb3sKICAgICAgICAgIGRlc3ZpbygpCiAgICAgIH0KCiAgICAgIGVzY3JldmVybnVtZXJvKDEsIHVsdHJhKDMpKQogICAgICBlc2NyZXZlcm51bWVybygyLCB1bHRyYSg0KSkKCiAgICAgIHNlKHVsdHJhKDMpID4gNzAgZSB1bHRyYSg0KSA8IDQwIGUgZXN0YW5hcmFtcGEgPT0gdmVyZGFkZWlybyllbnRhb3sKICAgICAgICAgIGVzY3JldmVyKDMsICJQYXJlZGUgw6AgZXNxdWVyZGEsIGZhw6dhIG8gcmVnYXRlIHBhcmEgYSBkaXJlaXRhLiIpCiAgICAgICAgICByZXNnYXRlRGlyZWl0YSgpCiAgICAgIH1zZW5hbyBzZSh1bHRyYSg0KSA+IDcwIGUgdWx0cmEoMykgPCA0MCBlIGVzdGFuYXJhbXBhID09IHZlcmRhZGVpcm8pZW50YW97CiAgICAgICAgICBlc2NyZXZlcigzLCAiUGFyZWRlIMOgIGRpZWl0YSwgZmHDp2EgbyByZXNnYXRlIHBhcmEgYSBlc3F1ZXJkYS4iKQogICAgICAgICAgcmVzZ2F0ZUVzcXVlcmRhKCkKICAgICAgfQoKICAgICAgc2VndWlkb3IoKQogIH0KYCkpLG1keCgicCIsbnVsbCxgICBmaW0KI0Nyw6lkaXRvcwpQcm9mLiBBbGV4ClByb2YuIEFzc2lzYCkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}