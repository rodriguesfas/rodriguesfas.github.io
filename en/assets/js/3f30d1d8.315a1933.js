"use strict";(self.webpackChunkrodriguesfas_github_io=self.webpackChunkrodriguesfas_github_io||[]).push([[1468],{5680:(e,r,n)=>{n.d(r,{xA:()=>c,yg:()=>g});var a=n(6540);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,a,t=function(e,r){if(null==e)return{};var n,a,t={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var l=a.createContext({}),u=function(e){var r=a.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},c=function(e){var r=u(e.components);return a.createElement(l.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=t,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(g,i(i({ref:r},c),{},{components:n})):a.createElement(g,i({ref:r},c))}));function g(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[d]="string"==typeof e?e:t,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9833:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(8168),t=(n(6540),n(5680));const o={id:"seguidor-de-linha",title:"Seguidor de Linha"},i=void 0,s={unversionedId:"robotica/sbotics/seguidor-de-linha",id:"robotica/sbotics/seguidor-de-linha",title:"Seguidor de Linha",description:"Segue linha para frente.",source:"@site/docs/robotica/sbotics/seguidor-de-linha.md",sourceDirName:"robotica/sbotics",slug:"/robotica/sbotics/seguidor-de-linha",permalink:"/en/docs/robotica/sbotics/seguidor-de-linha",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/robotica/sbotics/seguidor-de-linha.md",tags:[],version:"current",frontMatter:{id:"seguidor-de-linha",title:"Seguidor de Linha"},sidebar:"tutorialSidebar",previous:{title:"Sum\xe1rio",permalink:"/en/docs/robotica/print3d/sumario"},next:{title:"sBotics",permalink:"/en/docs/robotica/sbotics/sumario"}},l={},u=[{value:"Cr\xe9ditos",id:"cr\xe9ditos",level:2}],c={toc:u},d="wrapper";function p(e){let{components:r,...n}=e;return(0,t.yg)(d,(0,a.A)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"#Seguidor de linha 1"),(0,t.yg)("p",null,"Segue linha para frente."),(0,t.yg)("p",null,"Curvas de 180\xba para esquerda e direita."),(0,t.yg)("p",null,"Supera gueps."),(0,t.yg)("p",null,"Supera redutor de velocidade."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"  numero sensorEsq1 = 0\n  numero sensorEsq2 = 0\n  numero sensorDir1 = 0\n  numero sensorDir2 = 0\n\n  numero limiar = 24\n\n  tarefa ciclo{\n    enquanto (verdadeiro) farei{\n        escrevernumero(1, luz(2))\n        escrevernumero(2, luz(3))\n        escrevernumero(3, luz(4))\n\n        se (luz(2)>limiar e luz(3)<limiar e luz(4)>limiar) entao {\n            frente(200)\n        }senao se (luz(2)>limiar e luz(4)>limiar) entao{\n            frente(100)\n        }senao se(luz(2)<limiar) entao{\n            mover(negativo(100), 100)\n            esperar(100)\n        }senao se(luz(4)<limiar) entao{\n            mover(100, negativo(100))\n            esperar(100)      \n        }\n    }\n  }\n\n  inicio\n      ciclo()   \n  fim\n")),(0,t.yg)("p",null,"#Seguidor de linha 2"),(0,t.yg)("p",null,"Levanta escavadeira ao iniciar."),(0,t.yg)("p",null,"Segue linha para frente."),(0,t.yg)("p",null,"Curvas de 180\xba para esqueda e direia."),(0,t.yg)("p",null,"Curvas de 90\xba para esqueda e direita."),(0,t.yg)("p",null,"Detecta obst\xe1culo."),(0,t.yg)("p",null,"Supera gueps."),(0,t.yg)("p",null,"Supera redutor de velocidade."),(0,t.yg)("p",null,"Baixa escavadeira quando sobe a rampa."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'  numero sensorEsq1 = 0\n  numero sensorDir1 = 0\n  numero sensorEsq2 = 0\n  numero sensorDir2 = 0\n\n  numero limiar = 20\n  numero val1 = 0\n  numero val2 = 0\n  numero mut = 2\n\n  booleano estanarampa = falso\n\n  tarefa levantarEscavadeira{\n      velocidadeatuador(150)\n      levantar(1000)\n  }\n\n  tarefa baixarEscavadeira{\n      velocidadeatuador(50)\n      baixar(1000)\n  }\n\n  tarefa seguidor{\n      sensorEsq1 = luz(2)\n      sensorDir1 = luz(4)\n      sensorEsq2 = luz(1)\n      sensorDir2 = luz(5)\n      \n      se (sensorEsq1 > limiar e sensorDir1 > limiar) entao {\n      frente(40)\n      }senao se(sensorEsq1 < limiar e sensorDir1 > limiar ou cor(1)=="VERDE" ou cor(2)=="VERDE") entao {\n          se (cor(1) == "VERDE" ou cor(2) == "VERDE") entao{\n              frente(100)\n              esperar(600)\n              \n              enquanto (luz(3) > limiar ) farei {\n                  direita(100)\n              }\n              \n              tras(40)\n              esperar (500)\n          }\n          senao se (sensorEsq1 < limiar e sensorEsq2 < limiar) entao{\n              frente(150)\n              esperar(600)\n              direita(200)\n              esperar(4000)\n              tras(40)\n              esperar(500)\n          }\n          senao{\n              val1 = subtrair(sensorEsq1, sensorDir1)\n              val2 = multiplicar(val1, mut)\n              mover(negativo(100), 100)\n              esperar(val2)\n          }\n      }senao se(sensorEsq1 > limiar e sensorDir1 < limiar) entao {\n          se (cor(4)=="VERDE" ou cor(5)=="VERDE") entao{\n              frente(100)\n              esperar(600)\n                  \n              enquanto (luz(3) > limiar ) farei {\n                  esquerda(100)\n              }\n              \n              tras(40)\n              esperar(500)\n          }\n          senao se (sensorDir1 < limiar e sensorDir2 < limiar) entao{\n              frente(150)\n              esperar(600)\n              esquerda(200)\n              esperar(4000)\n              tras(40)\n              esperar(500)\n          }\n          senao{\n              val1 = subtrair(sensorEsq1, sensorDir1)\n              val2 = multiplicar(val1, mut)\n              mover(100, negativo(100))\n              esperar(val2)\n          }    \n      }\n  }\n\n  tarefa desvio {\n      se (ultra(1)<8) entao {\n          direita(100)\n          esperar(3500)\n          frente(100)\n          esperar (1200)\n          esquerda(100)\n          esperar (3000)\n          frente(150)\n          esperar (1200)\n          esquerda(200)\n          esperar (3200)\n\n          enquanto (luz (1) > limiar e luz (2) > limiar) farei {\n              frente (20)\n          }\n\n          frente (100)\n          esperar (700)\n          direita(200)\n          esperar(3000)\n      }\n  }\n\n  tarefa resgateDireita{\n      \n  }\n\n  tarefa resgateEsquerda{\n\n  }\n\n  inicio\n      levantarEscavadeira()\n      \n      enquanto(verdadeiro)farei{\n      se(inclinacao()>=300 e ultra(3) < 22 e ultra(4) < 22 e estanarampa == falso) entao{\n              estanarampa = verdadeiro\n              baixarEscavadeira()\n          }\n          \n          se(estanarampa == falso) entao{\n              desvio()\n          }\n\n          escrevernumero(1, ultra(3))\n          escrevernumero(2, ultra(4))\n\n          se(ultra(3) > 70 e ultra(4) < 40 e estanarampa == verdadeiro)entao{\n              escrever(3, "Parede \xe0 esquerda, fa\xe7a o regate para a direita.")\n              resgateDireita()\n          }senao se(ultra(4) > 70 e ultra(3) < 40 e estanarampa == verdadeiro)entao{\n              escrever(3, "Parede \xe0 dieita, fa\xe7a o resgate para a esquerda.")\n              resgateEsquerda()\n          }\n\n          seguidor()\n      }\n  fim\n')),(0,t.yg)("h2",{id:"cr\xe9ditos"},"Cr\xe9ditos"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Prof. Alex")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Prof. Assis"))))}p.isMDXComponent=!0}}]);